‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄õ∞if (!("finalizeConstruction" in ViewPU.prototype)) {
    Reflect.set(ViewPU.prototype, "finalizeConstruction", () => { });
}
import router from '@ohos.router';
import CubeStateManager from '../services/CubeStateManager';
import NotificationService from '../services/NotificationService';
import { Cube3DView } from '../components/Cube3DView';
class CubeDetail extends ViewPU {
    constructor(parent, params, __localStorage, elmtId = -1, paramsLambda = undefined, extraInfo) {
        super(parent, __localStorage, elmtId, extraInfo);
        if (typeof paramsLambda === "function") {
            this.paramsGenerator_ = paramsLambda;
        }
        this.cubeStateManager = CubeStateManager.getInstance();
        this.notificationService = NotificationService.getInstance();
        this.__cubeConnected = new ObservedPropertySimplePU(false, this, "cubeConnected");
        this.__batteryLevel = new ObservedPropertySimplePU(85, this, "batteryLevel");
        this.__bluetoothStatus = new ObservedPropertySimplePU('Â∑≤ËøûÊé•', this, "bluetoothStatus");
        this.__currentFace = new ObservedPropertySimplePU('ÁôΩËâ≤Èù¢', this, "currentFace");
        this.__currentMode = new ObservedPropertySimplePU('Â≠¶‰π†Ê®°Âºè', this, "currentMode");
        this.__cubeOrientation = new ObservedPropertyObjectPU({ x: 0, y: 0, z: 0, face: 'ÁôΩËâ≤Èù¢' }, this, "cubeOrientation");
        this.__rotationX = new ObservedPropertySimplePU(0, this, "rotationX");
        this.__rotationY = new ObservedPropertySimplePU(0, this, "rotationY");
        this.__rotationZ = new ObservedPropertySimplePU(0, this, "rotationZ");
        this.__autoRotate = new ObservedPropertySimplePU(true, this, "autoRotate");
        this.__totalUsageTime = new ObservedPropertySimplePU(0, this, "totalUsageTime");
        this.__todayUsageTime = new ObservedPropertySimplePU(0, this, "todayUsageTime");
        this.__sessionCount = new ObservedPropertySimplePU(0, this, "sessionCount");
        this.__lastSyncTime = new ObservedPropertySimplePU('', this, "lastSyncTime");
        this.__accelerometerData = new ObservedPropertyObjectPU([0, 0, 0], this, "accelerometerData");
        this.__gyroscopeData = new ObservedPropertyObjectPU([0, 0, 0], this, "gyroscopeData");
        this.setInitiallyProvidedValue(params);
        this.finalizeConstruction();
    }
    setInitiallyProvidedValue(params) {
        if (params.cubeStateManager !== undefined) {
            this.cubeStateManager = params.cubeStateManager;
        }
        if (params.notificationService !== undefined) {
            this.notificationService = params.notificationService;
        }
        if (params.cubeConnected !== undefined) {
            this.cubeConnected = params.cubeConnected;
        }
        if (params.batteryLevel !== undefined) {
            this.batteryLevel = params.batteryLevel;
        }
        if (params.bluetoothStatus !== undefined) {
            this.bluetoothStatus = params.bluetoothStatus;
        }
        if (params.currentFace !== undefined) {
            this.currentFace = params.currentFace;
        }
        if (params.currentMode !== undefined) {
            this.currentMode = params.currentMode;
        }
        if (params.cubeOrientation !== undefined) {
            this.cubeOrientation = params.cubeOrientation;
        }
        if (params.rotationX !== undefined) {
            this.rotationX = params.rotationX;
        }
        if (params.rotationY !== undefined) {
            this.rotationY = params.rotationY;
        }
        if (params.rotationZ !== undefined) {
            this.rotationZ = params.rotationZ;
        }
        if (params.autoRotate !== undefined) {
            this.autoRotate = params.autoRotate;
        }
        if (params.totalUsageTime !== undefined) {
            this.totalUsageTime = params.totalUsageTime;
        }
        if (params.todayUsageTime !== undefined) {
            this.todayUsageTime = params.todayUsageTime;
        }
        if (params.sessionCount !== undefined) {
            this.sessionCount = params.sessionCount;
        }
        if (params.lastSyncTime !== undefined) {
            this.lastSyncTime = params.lastSyncTime;
        }
        if (params.accelerometerData !== undefined) {
            this.accelerometerData = params.accelerometerData;
        }
        if (params.gyroscopeData !== undefined) {
            this.gyroscopeData = params.gyroscopeData;
        }
    }
    updateStateVars(params) {
    }
    purgeVariableDependenciesOnElmtId(rmElmtId) {
        this.__cubeConnected.purgeDependencyOnElmtId(rmElmtId);
        this.__batteryLevel.purgeDependencyOnElmtId(rmElmtId);
        this.__bluetoothStatus.purgeDependencyOnElmtId(rmElmtId);
        this.__currentFace.purgeDependencyOnElmtId(rmElmtId);
        this.__currentMode.purgeDependencyOnElmtId(rmElmtId);
        this.__cubeOrientation.purgeDependencyOnElmtId(rmElmtId);
        this.__rotationX.purgeDependencyOnElmtId(rmElmtId);
        this.__rotationY.purgeDependencyOnElmtId(rmElmtId);
        this.__rotationZ.purgeDependencyOnElmtId(rmElmtId);
        this.__autoRotate.purgeDependencyOnElmtId(rmElmtId);
        this.__totalUsageTime.purgeDependencyOnElmtId(rmElmtId);
        this.__todayUsageTime.purgeDependencyOnElmtId(rmElmtId);
        this.__sessionCount.purgeDependencyOnElmtId(rmElmtId);
        this.__lastSyncTime.purgeDependencyOnElmtId(rmElmtId);
        this.__accelerometerData.purgeDependencyOnElmtId(rmElmtId);
        this.__gyroscopeData.purgeDependencyOnElmtId(rmElmtId);
    }
    aboutToBeDeleted() {
        this.__cubeConnected.aboutToBeDeleted();
        this.__batteryLevel.aboutToBeDeleted();
        this.__bluetoothStatus.aboutToBeDeleted();
        this.__currentFace.aboutToBeDeleted();
        this.__currentMode.aboutToBeDeleted();
        this.__cubeOrientation.aboutToBeDeleted();
        this.__rotationX.aboutToBeDeleted();
        this.__rotationY.aboutToBeDeleted();
        this.__rotationZ.aboutToBeDeleted();
        this.__autoRotate.aboutToBeDeleted();
        this.__totalUsageTime.aboutToBeDeleted();
        this.__todayUsageTime.aboutToBeDeleted();
        this.__sessionCount.aboutToBeDeleted();
        this.__lastSyncTime.aboutToBeDeleted();
        this.__accelerometerData.aboutToBeDeleted();
        this.__gyroscopeData.aboutToBeDeleted();
        SubscriberManager.Get().delete(this.id__());
        this.aboutToBeDeletedInternal();
    }
    get cubeConnected() {
        return this.__cubeConnected.get();
    }
    set cubeConnected(newValue) {
        this.__cubeConnected.set(newValue);
    }
    get batteryLevel() {
        return this.__batteryLevel.get();
    }
    set batteryLevel(newValue) {
        this.__batteryLevel.set(newValue);
    }
    get bluetoothStatus() {
        return this.__bluetoothStatus.get();
    }
    set bluetoothStatus(newValue) {
        this.__bluetoothStatus.set(newValue);
    }
    get currentFace() {
        return this.__currentFace.get();
    }
    set currentFace(newValue) {
        this.__currentFace.set(newValue);
    }
    get currentMode() {
        return this.__currentMode.get();
    }
    set currentMode(newValue) {
        this.__currentMode.set(newValue);
    }
    get cubeOrientation() {
        return this.__cubeOrientation.get();
    }
    set cubeOrientation(newValue) {
        this.__cubeOrientation.set(newValue);
    }
    get rotationX() {
        return this.__rotationX.get();
    }
    set rotationX(newValue) {
        this.__rotationX.set(newValue);
    }
    get rotationY() {
        return this.__rotationY.get();
    }
    set rotationY(newValue) {
        this.__rotationY.set(newValue);
    }
    get rotationZ() {
        return this.__rotationZ.get();
    }
    set rotationZ(newValue) {
        this.__rotationZ.set(newValue);
    }
    get autoRotate() {
        return this.__autoRotate.get();
    }
    set autoRotate(newValue) {
        this.__autoRotate.set(newValue);
    }
    get totalUsageTime() {
        return this.__totalUsageTime.get();
    }
    set totalUsageTime(newValue) {
        this.__totalUsageTime.set(newValue);
    }
    get todayUsageTime() {
        return this.__todayUsageTime.get();
    }
    set todayUsageTime(newValue) {
        this.__todayUsageTime.set(newValue);
    }
    get sessionCount() {
        return this.__sessionCount.get();
    }
    set sessionCount(newValue) {
        this.__sessionCount.set(newValue);
    }
    get lastSyncTime() {
        return this.__lastSyncTime.get();
    }
    set lastSyncTime(newValue) {
        this.__lastSyncTime.set(newValue);
    }
    get accelerometerData() {
        return this.__accelerometerData.get();
    }
    set accelerometerData(newValue) {
        this.__accelerometerData.set(newValue);
    }
    get gyroscopeData() {
        return this.__gyroscopeData.get();
    }
    set gyroscopeData(newValue) {
        this.__gyroscopeData.set(newValue);
    }
    aboutToAppear() {
        this.loadCubeData();
        this.startAutoRotation();
        this.startSensorUpdates();
    }
    aboutToDisappear() {
        this.stopAutoRotation();
        this.stopSensorUpdates();
    }
    loadCubeData() {
        // Âä†ËΩΩÈ≠îÊñπÁä∂ÊÄÅÊï∞ÊçÆ
        this.cubeConnected = this.cubeStateManager.isConnected();
        this.batteryLevel = this.cubeStateManager.getBatteryLevel();
        this.currentFace = this.cubeStateManager.getCurrentFace();
        this.currentMode = this.cubeStateManager.getCurrentMode();
        // Âä†ËΩΩÁªüËÆ°Êï∞ÊçÆ
        this.totalUsageTime = this.cubeStateManager.getTotalUsageTime();
        this.todayUsageTime = this.cubeStateManager.getTodayUsageTime();
        this.sessionCount = this.cubeStateManager.getSessionCount();
        this.lastSyncTime = this.getCurrentTimeString();
    }
    startAutoRotation() {
        if (this.autoRotate) {
            setInterval(() => {
                this.rotationY += 1;
                this.rotationX += 0.5;
            }, 50);
        }
    }
    stopAutoRotation() {
        // ÂÅúÊ≠¢Ëá™Âä®ÊóãËΩ¨
    }
    startSensorUpdates() {
        // Ê®°Êãü‰º†ÊÑüÂô®Êï∞ÊçÆÊõ¥Êñ∞
        setInterval(() => {
            this.accelerometerData = [
                Math.random() * 2 - 1,
                Math.random() * 2 - 1,
                Math.random() * 2 - 1
            ];
            this.gyroscopeData = [
                Math.random() * 0.5 - 0.25,
                Math.random() * 0.5 - 0.25,
                Math.random() * 0.5 - 0.25
            ];
        }, 1000);
    }
    stopSensorUpdates() {
        // ÂÅúÊ≠¢‰º†ÊÑüÂô®Êõ¥Êñ∞
    }
    getCurrentTimeString() {
        const now = new Date();
        return now.toLocaleTimeString();
    }
    formatDuration(seconds) {
        const hours = Math.floor(seconds / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        const secs = seconds % 60;
        if (hours > 0) {
            return `${hours}h ${minutes}m ${secs}s`;
        }
        else if (minutes > 0) {
            return `${minutes}m ${secs}s`;
        }
        else {
            return `${secs}s`;
        }
    }
    toggleAutoRotation() {
        this.autoRotate = !this.autoRotate;
        if (this.autoRotate) {
            this.startAutoRotation();
        }
        else {
            this.stopAutoRotation();
        }
    }
    resetRotation() {
        this.rotationX = 0;
        this.rotationY = 0;
        this.rotationZ = 0;
    }
    initialRender() {
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(136:5)", "entry");
            Column.width('100%');
            Column.height('100%');
            Column.backgroundColor('#F5F5F5');
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(138:7)", "entry");
            // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
            Column.width('100%');
            // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
            Column.backgroundColor('#6366F1');
            // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
            Column.expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.TOP]);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(139:9)", "entry");
            Row.width('100%');
            Row.height(56);
            Row.padding({ left: 16, right: 16 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Image.create({ "id": 16777247, "type": 20000, params: [], "bundleName": "com.example.cubetime", "moduleName": "entry" });
            Image.debugLine("entry/src/main/ets/pages/CubeDetail.ets(140:11)", "entry");
            Image.width(24);
            Image.height(24);
            Image.fillColor(Color.White);
            Image.onClick(() => {
                router.back();
            });
        }, Image);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('È≠îÊñπËØ¶ÊÉÖ');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(148:11)", "entry");
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor(Color.White);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('Âà∑Êñ∞');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(155:11)", "entry");
            Text.fontSize(16);
            Text.fontColor('#6366F1');
            Text.fontWeight(FontWeight.Medium);
            Text.padding({ left: 12, right: 12, top: 6, bottom: 6 });
            Text.backgroundColor(Color.White);
            Text.borderRadius(20);
            Text.onClick(() => {
                this.loadCubeData();
            });
        }, Text);
        Text.pop();
        Row.pop();
        // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Scroll.create();
            Scroll.debugLine("entry/src/main/ets/pages/CubeDetail.ets(174:7)", "entry");
            Scroll.width('100%');
            Scroll.layoutWeight(1);
            Scroll.backgroundColor('#F5F5F5');
            Scroll.edgeEffect(EdgeEffect.Spring);
        }, Scroll);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(175:9)", "entry");
            Column.padding(16);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(177:11)", "entry");
            // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.width('100%');
            // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.padding(16);
        }, Column);
        {
            this.observeComponentCreation2((elmtId, isInitialRender) => {
                if (isInitialRender) {
                    let componentCall = new Cube3DView(this, {
                        rotationX: this.rotationX,
                        rotationY: this.rotationY,
                        rotationZ: this.rotationZ,
                        autoRotate: this.autoRotate,
                        cubeSize: 120,
                        showLabels: true
                    }, undefined, elmtId, () => { }, { page: "entry/src/main/ets/pages/CubeDetail.ets", line: 178, col: 13 });
                    ViewPU.create(componentCall);
                    let paramsLambda = () => {
                        return {
                            rotationX: this.rotationX,
                            rotationY: this.rotationY,
                            rotationZ: this.rotationZ,
                            autoRotate: this.autoRotate,
                            cubeSize: 120,
                            showLabels: true
                        };
                    };
                    componentCall.paramsGenerator_ = paramsLambda;
                }
                else {
                    this.updateStateVarsOfChildByElmtId(elmtId, {
                        rotationX: this.rotationX,
                        rotationY: this.rotationY,
                        rotationZ: this.rotationZ,
                        autoRotate: this.autoRotate,
                        cubeSize: 120,
                        showLabels: true
                    });
                }
            }, { name: "Cube3DView" });
        }
        // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(191:11)", "entry");
            // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
            Row.width('100%');
            // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
            Row.justifyContent(FlexAlign.Center);
            // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
            Row.padding({ bottom: 16 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Button.createWithLabel('ÈáçÁΩÆÊóãËΩ¨');
            Button.debugLine("entry/src/main/ets/pages/CubeDetail.ets(192:13)", "entry");
            Button.onClick(() => {
                this.resetRotation();
            });
            Button.backgroundColor('#6366F1');
            Button.fontColor(Color.White);
            Button.borderRadius(20);
            Button.fontWeight(FontWeight.Medium);
            Button.margin({ right: 8 });
        }, Button);
        Button.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Button.createWithLabel(this.autoRotate ? 'ÂÅúÊ≠¢ÊóãËΩ¨' : 'ÂºÄÂßãÊóãËΩ¨');
            Button.debugLine("entry/src/main/ets/pages/CubeDetail.ets(202:13)", "entry");
            Button.onClick(() => {
                this.toggleAutoRotation();
            });
            Button.backgroundColor(this.autoRotate ? '#EF4444' : '#10B981');
            Button.fontColor(Color.White);
            Button.borderRadius(20);
            Button.fontWeight(FontWeight.Medium);
        }, Button);
        Button.pop();
        // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(216:11)", "entry");
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.width('100%');
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.padding(20);
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.backgroundColor(Color.White);
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.borderRadius(16);
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.shadow({
                radius: 20,
                color: '#00000008',
                offsetX: 0,
                offsetY: 4
            });
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.margin({ bottom: 16 });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('È≠îÊñπÁä∂ÊÄÅ');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(217:13)", "entry");
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#1F2937');
            Text.margin({ bottom: 16 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(223:13)", "entry");
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ËøûÊé•Áä∂ÊÄÅ');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(224:15)", "entry");
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
            Blank.debugLine("entry/src/main/ets/pages/CubeDetail.ets(229:15)", "entry");
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.cubeConnected ? 'Â∑≤ËøûÊé•' : 'Êú™ËøûÊé•');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(231:15)", "entry");
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor(this.cubeConnected ? '#10B981' : '#EF4444');
        }, Text);
        Text.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(239:13)", "entry");
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÁîµÊ±†ÁîµÈáè');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(240:19)", "entry");
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
            Blank.debugLine("entry/src/main/ets/pages/CubeDetail.ets(245:19)", "entry");
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(247:19)", "entry");
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.batteryLevel + '%');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(248:21)", "entry");
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor(this.batteryLevel > 20 ? '#10B981' : '#EF4444');
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Stack.create();
            Stack.debugLine("entry/src/main/ets/pages/CubeDetail.ets(253:21)", "entry");
            Stack.margin({ left: 8 });
        }, Stack);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(254:23)", "entry");
            Column.width(40);
            Column.height(8);
            Column.backgroundColor('#E5E7EB');
            Column.borderRadius(4);
            Column.margin({ left: 8 });
        }, Column);
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(261:23)", "entry");
            Column.width(this.batteryLevel * 0.4);
            Column.height(8);
            Column.backgroundColor(this.batteryLevel > 20 ? '#10B981' : '#EF4444');
            Column.borderRadius(4);
            Column.margin({ left: 8 });
        }, Column);
        Column.pop();
        Stack.pop();
        Row.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(274:13)", "entry");
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÂΩìÂâçÈù¢');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(275:15)", "entry");
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
            Blank.debugLine("entry/src/main/ets/pages/CubeDetail.ets(280:15)", "entry");
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.currentFace);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(282:15)", "entry");
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#6366F1');
        }, Text);
        Text.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(290:13)", "entry");
            Row.width('100%');
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÂΩìÂâçÊ®°Âºè');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(291:15)", "entry");
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
            Blank.debugLine("entry/src/main/ets/pages/CubeDetail.ets(296:15)", "entry");
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.currentMode);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(298:15)", "entry");
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#F59E0B');
        }, Text);
        Text.pop();
        Row.pop();
        // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(320:11)", "entry");
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.width('100%');
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.padding(20);
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.backgroundColor(Color.White);
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.borderRadius(16);
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.shadow({
                radius: 20,
                color: '#00000008',
                offsetX: 0,
                offsetY: 4
            });
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.margin({ bottom: 16 });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‰ΩøÁî®ÁªüËÆ°');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(321:13)", "entry");
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#1F2937');
            Text.margin({ bottom: 16 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(327:13)", "entry");
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(328:15)", "entry");
            Column.layoutWeight(1);
            Column.alignItems(HorizontalAlign.Start);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.formatDuration(this.totalUsageTime));
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(329:17)", "entry");
            Text.fontSize(28);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#6366F1');
            Text.margin({ bottom: 4 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÊÄª‰ΩøÁî®Êó∂Èó¥');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(335:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#6B7280');
        }, Text);
        Text.pop();
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(342:15)", "entry");
            Column.layoutWeight(1);
            Column.alignItems(HorizontalAlign.Center);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.formatDuration(this.todayUsageTime));
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(343:17)", "entry");
            Text.fontSize(28);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#10B981');
            Text.margin({ bottom: 4 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‰ªäÊó•‰ΩøÁî®');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(349:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#6B7280');
        }, Text);
        Text.pop();
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(356:15)", "entry");
            Column.layoutWeight(1);
            Column.alignItems(HorizontalAlign.End);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.sessionCount.toString());
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(357:17)", "entry");
            Text.fontSize(28);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#F59E0B');
            Text.margin({ bottom: 4 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‰ºöËØùÊ¨°Êï∞');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(363:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#6B7280');
        }, Text);
        Text.pop();
        Column.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(373:13)", "entry");
            Row.width('100%');
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÊúÄÂêéÂêåÊ≠•');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(374:15)", "entry");
            Text.fontSize(14);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
            Blank.debugLine("entry/src/main/ets/pages/CubeDetail.ets(379:15)", "entry");
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.lastSyncTime);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(381:15)", "entry");
            Text.fontSize(14);
            Text.fontColor('#9CA3AF');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        Row.pop();
        // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(401:11)", "entry");
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.width('100%');
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.padding(20);
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.backgroundColor(Color.White);
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.borderRadius(16);
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.shadow({
                radius: 20,
                color: '#00000008',
                offsetX: 0,
                offsetY: 4
            });
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.margin({ bottom: 32 });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‰º†ÊÑüÂô®Êï∞ÊçÆ');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(402:13)", "entry");
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#1F2937');
            Text.margin({ bottom: 16 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/pages/CubeDetail.ets(408:13)", "entry");
            Column.padding(16);
            Column.backgroundColor('#F9FAFB');
            Column.borderRadius(12);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(409:15)", "entry");
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('Âä†ÈÄüÂ∫¶ËÆ°');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(410:17)", "entry");
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
            Text.layoutWeight(1);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`X: ${this.accelerometerData[0].toFixed(2)}`);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(416:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#6366F1');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`Y: ${this.accelerometerData[1].toFixed(2)}`);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(423:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#10B981');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`Z: ${this.accelerometerData[2].toFixed(2)}`);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(430:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#F59E0B');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/pages/CubeDetail.ets(440:15)", "entry");
            Row.width('100%');
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÈôÄËû∫‰ª™');
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(441:17)", "entry");
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
            Text.layoutWeight(1);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`X: ${this.gyroscopeData[0].toFixed(2)}`);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(447:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#6366F1');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`Y: ${this.gyroscopeData[1].toFixed(2)}`);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(454:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#10B981');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`Z: ${this.gyroscopeData[2].toFixed(2)}`);
            Text.debugLine("entry/src/main/ets/pages/CubeDetail.ets(461:17)", "entry");
            Text.fontSize(14);
            Text.fontColor('#F59E0B');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        Row.pop();
        Column.pop();
        // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
        Column.pop();
        Column.pop();
        Scroll.pop();
        Column.pop();
    }
    rerender() {
        this.updateDirtyElements();
    }
    static getEntryName() {
        return "CubeDetail";
    }
}
registerNamedRoute(() => new CubeDetail(undefined, {}), "", { bundleName: "com.example.cubetime", moduleName: "entry", pagePath: "pages/CubeDetail", pageFullPath: "entry/src/main/ets/pages/CubeDetail", integratedHsp: "false", moduleType: "followWithHap" });
//# sourceMappingURL=CubeDetail.js.map¬îŸQ hvigor_ignore_E:_DevEco Studio_sdk_default_openharmony_ets_api_@ohos.router.d.tsŸFE:\Deveco_Project\test\entry\src\main\ets\services\CubeStateManager.tsŸIE:\Deveco_Project\test\entry\src\main\ets\services\NotificationService.tsŸCE:\Deveco_Project\test\entry\src\main\ets\components\Cube3DView.etsŸ>E:\Deveco_Project\test\entry\src\main\ets\pages\CubeDetail.ets‘rBö™moduleName±isLocalDependencyØisNodeEntryFileßpkgPath±belongProjectPathßpkgName™pkgVersion±dependencyPkgInfo∞belongModulePath¨shouldEmitJs•entry√¬ºE:\Deveco_Project\test\entry∂E:\Deveco_Project\test•entry•1.0.0‘  ºE:\Deveco_Project\test\entry√√⁄9¥import router from '@ohos.router';
import CubeStateManager from '../services/CubeStateManager';
import NotificationService from '../services/NotificationService';
import { Cube3DView } from '../components/Cube3DView';

interface CubeOrientation {
  x: number;
  y: number;
  z: number;
  face: string;
}

@Entry
@Component
struct CubeDetail {
  private cubeStateManager: CubeStateManager = CubeStateManager.getInstance();
  private notificationService: NotificationService = NotificationService.getInstance();
  
  // È≠îÊñπÁä∂ÊÄÅ
  @State cubeConnected: boolean = false;
  @State batteryLevel: number = 85;
  @State bluetoothStatus: string = 'Â∑≤ËøûÊé•';
  @State currentFace: string = 'ÁôΩËâ≤Èù¢';
  @State currentMode: string = 'Â≠¶‰π†Ê®°Âºè';
  @State cubeOrientation: CubeOrientation = { x: 0, y: 0, z: 0, face: 'ÁôΩËâ≤Èù¢' };
  
  // 3DÂä®ÁîªÁõ∏ÂÖ≥
  @State rotationX: number = 0;
  @State rotationY: number = 0;
  @State rotationZ: number = 0;
  @State autoRotate: boolean = true;
  
  // ËØ¶ÁªÜ‰ø°ÊÅØ
  @State totalUsageTime: number = 0;
  @State todayUsageTime: number = 0;
  @State sessionCount: number = 0;
  @State lastSyncTime: string = '';
  
  // ‰º†ÊÑüÂô®Êï∞ÊçÆ
  @State accelerometerData: Array<number> = [0, 0, 0];
  @State gyroscopeData: Array<number> = [0, 0, 0];

  aboutToAppear() {
    this.loadCubeData();
    this.startAutoRotation();
    this.startSensorUpdates();
  }

  aboutToDisappear() {
    this.stopAutoRotation();
    this.stopSensorUpdates();
  }

  private loadCubeData() {
    // Âä†ËΩΩÈ≠îÊñπÁä∂ÊÄÅÊï∞ÊçÆ
    this.cubeConnected = this.cubeStateManager.isConnected();
    this.batteryLevel = this.cubeStateManager.getBatteryLevel();
    this.currentFace = this.cubeStateManager.getCurrentFace();
    this.currentMode = this.cubeStateManager.getCurrentMode();
    
    // Âä†ËΩΩÁªüËÆ°Êï∞ÊçÆ
    this.totalUsageTime = this.cubeStateManager.getTotalUsageTime();
    this.todayUsageTime = this.cubeStateManager.getTodayUsageTime();
    this.sessionCount = this.cubeStateManager.getSessionCount();
    this.lastSyncTime = this.getCurrentTimeString();
  }

  private startAutoRotation() {
    if (this.autoRotate) {
      setInterval(() => {
        this.rotationY += 1;
        this.rotationX += 0.5;
      }, 50);
    }
  }

  private stopAutoRotation() {
    // ÂÅúÊ≠¢Ëá™Âä®ÊóãËΩ¨
  }

  private startSensorUpdates() {
    // Ê®°Êãü‰º†ÊÑüÂô®Êï∞ÊçÆÊõ¥Êñ∞
    setInterval(() => {
      this.accelerometerData = [
        Math.random() * 2 - 1,
        Math.random() * 2 - 1,
        Math.random() * 2 - 1
      ];
      this.gyroscopeData = [
        Math.random() * 0.5 - 0.25,
        Math.random() * 0.5 - 0.25,
        Math.random() * 0.5 - 0.25
      ];
    }, 1000);
  }

  private stopSensorUpdates() {
    // ÂÅúÊ≠¢‰º†ÊÑüÂô®Êõ¥Êñ∞
  }

  private getCurrentTimeString(): string {
    const now = new Date();
    return now.toLocaleTimeString();
  }

  private formatDuration(seconds: number): string {
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    const secs = seconds % 60;
    
    if (hours > 0) {
      return `${hours}h ${minutes}m ${secs}s`;
    } else if (minutes > 0) {
      return `${minutes}m ${secs}s`;
    } else {
      return `${secs}s`;
    }
  }

  private toggleAutoRotation() {
    this.autoRotate = !this.autoRotate;
    if (this.autoRotate) {
      this.startAutoRotation();
    } else {
      this.stopAutoRotation();
    }
  }

  private resetRotation() {
    this.rotationX = 0;
    this.rotationY = 0;
    this.rotationZ = 0;
  }

  build() {
    Column() {
      // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
      Column() {
        Row() {
          Image($r('app.media.ic_back'))
            .width(24)
            .height(24)
            .fillColor(Color.White)
            .onClick(() => {
              router.back();
            })
          
          Text('È≠îÊñπËØ¶ÊÉÖ')
            .fontSize(20)
            .fontWeight(FontWeight.Bold)
            .fontColor(Color.White)
            .layoutWeight(1)
            .textAlign(TextAlign.Center)
          
          Text('Âà∑Êñ∞')
            .fontSize(16)
            .fontColor('#6366F1')
            .fontWeight(FontWeight.Medium)
            .padding({ left: 12, right: 12, top: 6, bottom: 6 })
            .backgroundColor(Color.White)
            .borderRadius(20)
            .onClick(() => {
              this.loadCubeData();
            })
        }
        .width('100%')
        .height(56)
        .padding({ left: 16, right: 16 })
      }
      .width('100%')
      .backgroundColor('#6366F1')
      .expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.TOP])

      Scroll() {
        Column() {
          // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
          Column() {
            Cube3DView({
              rotationX: this.rotationX,
              rotationY: this.rotationY,
              rotationZ: this.rotationZ,
              autoRotate: this.autoRotate,
              cubeSize: 120,
              showLabels: true
            })
          }
          .width('100%')
          .padding(16)

          // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
          Row() {
            Button('ÈáçÁΩÆÊóãËΩ¨')
              .onClick(() => {
                this.resetRotation();
              })
              .backgroundColor('#6366F1')
              .fontColor(Color.White)
              .borderRadius(20)
              .fontWeight(FontWeight.Medium)
              .margin({ right: 8 })

            Button(this.autoRotate ? 'ÂÅúÊ≠¢ÊóãËΩ¨' : 'ÂºÄÂßãÊóãËΩ¨')
              .onClick(() => {
                this.toggleAutoRotation();
              })
              .backgroundColor(this.autoRotate ? '#EF4444' : '#10B981')
              .fontColor(Color.White)
              .borderRadius(20)
              .fontWeight(FontWeight.Medium)
          }
          .width('100%')
          .justifyContent(FlexAlign.Center)
          .padding({ bottom: 16 })

          // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
          Column() {
            Text('È≠îÊñπÁä∂ÊÄÅ')
              .fontSize(20)
              .fontWeight(FontWeight.Bold)
              .fontColor('#1F2937')
              .margin({ bottom: 16 })

            Row() {
              Text('ËøûÊé•Áä∂ÊÄÅ')
                .fontSize(16)
                .fontColor('#6B7280')
                .fontWeight(FontWeight.Medium)
              
              Blank()
              
              Text(this.cubeConnected ? 'Â∑≤ËøûÊé•' : 'Êú™ËøûÊé•')
                .fontSize(16)
                .fontWeight(FontWeight.Bold)
                .fontColor(this.cubeConnected ? '#10B981' : '#EF4444')
            }
            .width('100%')
            .margin({ bottom: 12 })

            Row() {
                  Text('ÁîµÊ±†ÁîµÈáè')
                    .fontSize(16)
                    .fontColor('#6B7280')
                    .fontWeight(FontWeight.Medium)
                  
                  Blank()
                  
                  Row() {
                    Text(this.batteryLevel + '%')
                      .fontSize(16)
                      .fontWeight(FontWeight.Bold)
                      .fontColor(this.batteryLevel > 20 ? '#10B981' : '#EF4444')
                    
                    Stack() {
                      Column()
                        .width(40)
                        .height(8)
                        .backgroundColor('#E5E7EB')
                        .borderRadius(4)
                        .margin({ left: 8 })
                      
                      Column()
                        .width(this.batteryLevel * 0.4)
                        .height(8)
                        .backgroundColor(this.batteryLevel > 20 ? '#10B981' : '#EF4444')
                        .borderRadius(4)
                        .margin({ left: 8 })
                    }
                    .margin({ left: 8 })
              }
            }
            .width('100%')
            .margin({ bottom: 12 })

            Row() {
              Text('ÂΩìÂâçÈù¢')
                .fontSize(16)
                .fontColor('#6B7280')
                .fontWeight(FontWeight.Medium)
              
              Blank()
              
              Text(this.currentFace)
                .fontSize(16)
                .fontWeight(FontWeight.Bold)
                .fontColor('#6366F1')
            }
            .width('100%')
            .margin({ bottom: 12 })

            Row() {
              Text('ÂΩìÂâçÊ®°Âºè')
                .fontSize(16)
                .fontColor('#6B7280')
                .fontWeight(FontWeight.Medium)
              
              Blank()
              
              Text(this.currentMode)
                .fontSize(16)
                .fontWeight(FontWeight.Bold)
                .fontColor('#F59E0B')
            }
            .width('100%')
          }
          .width('100%')
          .padding(20)
          .backgroundColor(Color.White)
          .borderRadius(16)
          .shadow({
            radius: 20,
            color: '#00000008',
            offsetX: 0,
            offsetY: 4
          })
          .margin({ bottom: 16 })



          // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
          Column() {
            Text('‰ΩøÁî®ÁªüËÆ°')
              .fontSize(20)
              .fontWeight(FontWeight.Bold)
              .fontColor('#1F2937')
              .margin({ bottom: 16 })

            Row() {
              Column() {
                Text(this.formatDuration(this.totalUsageTime))
                  .fontSize(28)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#6366F1')
                  .margin({ bottom: 4 })
                
                Text('ÊÄª‰ΩøÁî®Êó∂Èó¥')
                  .fontSize(14)
                  .fontColor('#6B7280')
              }
              .layoutWeight(1)
              .alignItems(HorizontalAlign.Start)

              Column() {
                Text(this.formatDuration(this.todayUsageTime))
                  .fontSize(28)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#10B981')
                  .margin({ bottom: 4 })
                
                Text('‰ªäÊó•‰ΩøÁî®')
                  .fontSize(14)
                  .fontColor('#6B7280')
              }
              .layoutWeight(1)
              .alignItems(HorizontalAlign.Center)

              Column() {
                Text(this.sessionCount.toString())
                  .fontSize(28)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#F59E0B')
                  .margin({ bottom: 4 })
                
                Text('‰ºöËØùÊ¨°Êï∞')
                  .fontSize(14)
                  .fontColor('#6B7280')
              }
              .layoutWeight(1)
              .alignItems(HorizontalAlign.End)
            }
            .width('100%')
            .margin({ bottom: 12 })

            Row() {
              Text('ÊúÄÂêéÂêåÊ≠•')
                .fontSize(14)
                .fontColor('#6B7280')
                .fontWeight(FontWeight.Medium)
              
              Blank()
              
              Text(this.lastSyncTime)
                .fontSize(14)
                .fontColor('#9CA3AF')
                .fontWeight(FontWeight.Medium)
            }
            .width('100%')
          }
          .width('100%')
          .padding(20)
          .backgroundColor(Color.White)
          .borderRadius(16)
          .shadow({
            radius: 20,
            color: '#00000008',
            offsetX: 0,
            offsetY: 4
          })
          .margin({ bottom: 16 })

          // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
          Column() {
            Text('‰º†ÊÑüÂô®Êï∞ÊçÆ')
              .fontSize(20)
              .fontWeight(FontWeight.Bold)
              .fontColor('#1F2937')
              .margin({ bottom: 16 })

            Column() {
              Row() {
                Text('Âä†ÈÄüÂ∫¶ËÆ°')
                  .fontSize(16)
                  .fontColor('#6B7280')
                  .fontWeight(FontWeight.Medium)
                  .layoutWeight(1)
                
                Text(`X: ${this.accelerometerData[0].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#6366F1')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
                
                Text(`Y: ${this.accelerometerData[1].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#10B981')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
                
                Text(`Z: ${this.accelerometerData[2].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#F59E0B')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
              }
              .width('100%')
              .margin({ bottom: 12 })

              Row() {
                Text('ÈôÄËû∫‰ª™')
                  .fontSize(16)
                  .fontColor('#6B7280')
                  .fontWeight(FontWeight.Medium)
                  .layoutWeight(1)
                
                Text(`X: ${this.gyroscopeData[0].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#6366F1')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
                
                Text(`Y: ${this.gyroscopeData[1].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#10B981')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
                
                Text(`Z: ${this.gyroscopeData[2].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#F59E0B')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
              }
              .width('100%')
            }
            .padding(16)
            .backgroundColor('#F9FAFB')
            .borderRadius(12)
          }
          .width('100%')
          .padding(20)
          .backgroundColor(Color.White)
          .borderRadius(16)
          .shadow({
            radius: 20,
            color: '#00000008',
            offsetX: 0,
            offsetY: 4
          })
          .margin({ bottom: 32 })
        }
        .padding(16)
      }
      .width('100%')
      .layoutWeight(1)
      .backgroundColor('#F5F5F5')
      .edgeEffect(EdgeEffect.Spring)
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F5F5F5')
  }
}¿‘rCî¨@ohos.routerº../services/CubeStateManagerø../services/NotificationService∏../components/Cube3DView‘rDó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA√ŸQ hvigor_ignore_E:_DevEco Studio_sdk_default_openharmony_ets_api_@ohos.router.d.tsA√™oh-resolve¬DA¬ŸFE:\Deveco_Project\test\entry\src\main\ets\services\CubeStateManager.tsA√™oh-resolve¬DA¬ŸIE:\Deveco_Project\test\entry\src\main\ets\services\NotificationService.tsA√™oh-resolve¬DA¬ŸCE:\Deveco_Project\test\entry\src\main\ets\components\Cube3DView.etsA√™oh-resolve¬ì‘rEñßversion§file™sourceRootßsources•names®mappings≠CubeDetail.js†ëÆCubeDetail.etsê‹îêêêñî    î  î  î  î!  !î"  "ñî   î î î î; ;î< <ñî   î î î   îÃA ÃAîÃB ÃBòî   î î	 	î î î î5 5î6 6íî î ëî  êêêêïî  /î0 ?î1 Ã@î< ÃKî> ÃMïî# 5î6 ÃHî7 ÃIîÃB ÃTîÃD ÃVíî< "îÃA 'íî;  î= "íî> #îÃC (íî: î? $íî: îÃ@ %‹ î> ,îÃ@ .îÃA /îÃC 1îÃD 2îÃF 4îÃG 5îÃI 7îÃJ 8îÃL :îÃM ;îÃO =îÃP >îÃR Ã@îÃV ÃDîÃX ÃFîÃ] ÃKîÃ_ ÃMíî8 î9 íî8 î9 íî8 î9 íî9 î= #íî= !"î> !#íî= ""î> "#íî; # î< #!íî; $ î= $"òîÃ@ ',îÃA '-îÃB '.îÃD '0îÃE '1îÃG '3îÃH '4îÃI '5òî< ((î= ()î> (*îÃ@ (,îÃA (-îÃC (/îÃD (0îÃE (1êêëî 
êêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî !	î !êêíî !	î !êêíî "	î "êêíî "	î "êêíî #	î #êêíî #	î #êêíî $	î $êêíî $	î $êêíî '	î 'êêíî '	î 'êêíî (	î (êêíî (	î (êêíî *î *ñî +î +î +	î +î +î +ñî ,î ,î ,	î ,î  ,î! ,ñî -î -î -	î -î! -î" -íî .î .íî 0î 0ñî 1î 1î 1	î 1î 1î  1ñî 2î 2î 2	î 2î  2î! 2íî 3î 3íî 5
î 5íî 6î 6úî 7î 7î 7	î 7î 7î! 7î" 7î2 7.î3 7/î> 7:îÃ@ 7<îÃA 7=úî 8î 8î 8	î 8î 8î  8î! 8î1 8-î2 8.îÃA 8=îÃC 8?îÃD 8Ã@úî 9î 9î 9	î 9î 9î 9î  9î0 9,î1 9-î? 9;îÃA 9=îÃB 9>úî :î :î :	î :î :î :î  :î0 :,î1 :-î? :;îÃA :=îÃB :>íî <î <úî =î =î =	î =î =î" =î# =î3 =/î4 =0îÃE =ÃAîÃG =ÃCîÃH =ÃDúî >î >î >	î >î >î" >î# >î3 >/î4 >0îÃE >ÃAîÃG >ÃCîÃH >ÃDúî ?î ?î ?	î ?î ?î  ?î! ?î1 ?-î2 ?.îÃA ?=îÃC ??îÃD ?Ã@öî Ã@î Ã@î Ã@	î Ã@î Ã@î  Ã@î! Ã@î5 Ã@1î7 Ã@3î8 Ã@4íî ÃAî ÃAíî ÃC
î ÃCñî ÃDî ÃDî ÃDî ÃDî ÃDî ÃDïî ÃEî ÃEî ÃEî ÃEî ÃEóî ÃFî ÃFî ÃFî ÃFî" ÃFî# ÃFî$ ÃFóî ÃGî ÃGî ÃGî ÃGî" ÃGî% ÃGî& ÃGñî ÃHî ÃHî ÃH	î ÃHî ÃHî ÃHëî	 ÃIíî ÃJî ÃJíî ÃL
î ÃLíî ÃMî ÃMíî ÃNî ÃNíî ÃP
î ÃPíî ÃQî ÃQïî ÃRî ÃRî ÃRî ÃRî ÃRïî ÃSî ÃS
î ÃSî" ÃSî% ÃSôî ÃTî ÃTî ÃTî ÃTî ÃTî  ÃTî! ÃTî$ ÃTî% ÃTôî ÃUî ÃUî ÃUî ÃUî ÃUî  ÃUî! ÃUî$ ÃUî% ÃUôî ÃVî ÃVî ÃVî ÃVî ÃVî  ÃVî! ÃVî$ ÃVî% ÃVíî ÃWî ÃWïî ÃXî ÃX
î ÃXî ÃXî! ÃXôî ÃYî ÃYî ÃYî ÃYî ÃYî  ÃYî# ÃYî& ÃYî* ÃY"ôî ÃZî ÃZî ÃZî ÃZî ÃZî  ÃZî# ÃZî& ÃZî* ÃZ"ôî Ã[î Ã[î Ã[î Ã[î Ã[î  Ã[î# Ã[î& Ã[î* Ã["íî Ã\î Ã\ñî Ã]î	 Ã]î Ã]î Ã]î Ã]î Ã]íî Ã^î Ã^íî Ã`
î Ã`íî Ãaî Ãaíî Ãbî Ãbíî Ãd
î Ãdòî Ãeî Ãe
î Ãeî Ãeî Ãeî Ãeî Ãeî Ãeóî Ãfî Ãfî Ãfî Ãfî% Ãf!î' Ãf#î( Ãf$íî Ãgî Ãgîî Ãi
î Ãiî Ãiî Ãi(ùî Ãjî Ãj
î Ãjî Ãjî Ãjî Ãjî  Ãjî! Ãjî( Ãj$î+ Ãj'î/ Ãj+î0 Ãj,î1 Ãj-‹ î Ãkî Ãk
î Ãkî Ãkî Ãkî Ãkî" Ãkî# Ãkî$ Ãk î+ Ãk'î. Ãk*î2 Ãk.î3 Ãk/î6 Ãk2î8 Ãk4î9 Ãk5î: Ãk6òî Ãlî Ãl
î Ãlî Ãlî Ãlî Ãlî! Ãlî" Ãlñî Ãnî Ãnî Ãnî Ãnî Ãnî Ãnöî Ãoî Ãoî Ãoî Ãoî  Ãoî' Ão!î, Ão&î0 Ão*î3 Ão-î4 Ão.ëî	 Ãpñî Ãpî Ãpî Ãpî Ãpî Ãpî Ãpòî Ãqî Ãqî Ãqî Ãqî" Ãqî& Ãq î) Ãq#î* Ãq$ëî	 Ãrëî Ãrñî Ãsî Ãsî Ãsî Ãsî Ãsî Ãsëî	 Ãtíî Ãuî Ãuíî Ãw
î Ãwöî Ãxî Ãxî Ãx	î Ãxî Ãxî Ãxî Ãxî  Ãxî* Ãx&î+ Ãx'ñî Ãyî Ãyî Ãyî Ãyî Ãyî Ãyñî Ãzî Ãz
î Ãzî" Ãzî$ Ãzî% Ãzëî	 Ã{ëî Ã{ñî Ã|î Ã|
î Ã|î! Ã|î# Ã|î$ Ã|ëî	 Ã}íî Ã~î Ã~íî ÃÄ
î ÃÄóî ÃÅî ÃÅî ÃÅ	î ÃÅî ÃÅî ÃÅî ÃÅóî ÃÇî ÃÇî ÃÇ	î ÃÇî ÃÇî ÃÇî ÃÇóî ÃÉî ÃÉî ÃÉ	î ÃÉî ÃÉî ÃÉî ÃÉíî ÃÑî ÃÑëî ÃÜêíî Ãáî Ãá
êñî Ãáî Ãá
î ÕÏî ÕÏ
î ÕÏî ÕÏñî Ãáî Ãá
î ÕÌî ÕÌî ÕÌî  ÕÌñî Ãáî Ãá
î ÕÓî" ÕÓî# ÕÓî, ÕÓêêíî Ãàî! Ãàíî Ãâî Ãâêíî Ãàî! Ãàñî Ãâî Ãâî Ã©î Ã©î Ã©î Ã©íî Ãàî! Ãàñî Ãâî Ãâî Ã™î" Ã™î# Ã™î, Ã™ íî Ãàî! Ãà‹ î Ãâî Ãâî Ã´î! Ã´î" Ã´î# Ã´î/ Ã´#î0 Ã´$î6 Ã´*î7 Ã´+î9 Ã´-î: Ã´.îÃF Ã´:îÃG Ã´;îÃJ Ã´>îÃK Ã´?êêíî Ãäî Ãäêñî Ãäî Ãäî Ã•	î Ã•î Ã•î Ã•ñî Ãäî Ãäî Ã¶	î Ã¶î Ã¶î Ã¶ûî Ãäî Ãäî Ãß	î Ãßî Ãßî Ãßî Ãßî  Ãßî" Ãßî$ Ãßî) Ãß"î+ Ãß$î- Ãß&î/ Ãß(êêíî Ãã
î Ããêñî Ãã
î Ããî Ãåî Ãåî Ãåî Ãåñî Ãã
î Ããî Ãçî Ãçî Ãçî Ãçòî Ãã
î Ããî Ãéî Ãéî Ãéî! Ãéî" Ãéî' Ãé"óî Ãã
î Ããî Ãèî Ãèî Ãèî Ãèî Ãèñî Ãêî Ãêî Ãêî Ãêî Ãêî Ãêíî Ãëî Ãëêêîî Ãì
î Ãìî Ãìî Ãìêñî Ãì
î Ãìî Ãîî Ãîî Ãîî Ãîòî Ãì
î Ãìî Ãïî Ãïî Ãïî& Ãï"î' Ãï#î+ Ãï'òî Ãì
î Ãìî Ãñî Ãñî Ãñî  Ãñî! Ãñî& Ãñ"ñî Ãì
î Ãìî Ãóî Ãóî Ãóî Ãóòî Ãì
î Ãìî Ãòî Ãòî Ãòî$ Ãò î% Ãò!î+ Ãò'êíî Ãì
î Ãìêîî Ãö
î Ãöî Ãöî Ãöêñî Ãö
î Ãöî Ãõî Ãõî Ãõî Ãõñî Ãö
î Ãöî Ãúî Ãúî Ãúî$ Ãú òî Ãö
î Ãöî Ãùî Ãùî Ãùî& Ãù"î' Ãù#î- Ãù)‹ î Ãö
î Ãöî Ãûî Ãûî Ãûî Ãûî Ãûî! Ãûî# Ãûî% Ãû!î* Ãû&î, Ãû(î. Ãû*î0 Ãû,î3 Ãû/î5 Ãû1î6 Ãû2î8 Ãû4î> Ãû:îÃ@ Ãû<îÃA Ãû=îÃC Ãû?òî Ãö
î Ãöî Ãüî  Ãüî! Ãüî& Ãü"î' Ãü#î, Ãü(ñî Ãö
î Ãöî Ã†î Ã†î Ã†î  Ã†óî Ãö
î Ãöî Ã°î Ã°î Ã°î Ã°î Ã°ñî Ã¢î Ã¢î Ã¢î! Ã¢î# Ã¢!î$ Ã¢"íî Ã£î Ã£êíî Ãö
î Ãöíî Ãäî Ãäíî Ãàî Ãàíî Ãâî Ãâêíî Ã≠î Ã≠êñî Ã≠î Ã≠î ÕÁî ÕÁî ÕÁî ÕÁñî Ã≠î Ã≠î ÕËî ÕËî  ÕËî! ÕËñî Ã≠î Ã≠î ÕÈî" ÕÈî# ÕÈî, ÕÈ òî Ã≠î Ã≠î ÕÍî ÕÍî ÕÍî( ÕÍî) ÕÍî/ ÕÍ#êêíî ÃÆî ÃÆêñî ÃÆî ÃÆî ÕÂ	î ÕÂî ÕÂî ÕÂêêíî ÃØ
î ÃØíî Ã∞
î Ã∞êíî ÃØ
î ÃØñî Ã∞
î Ã∞î Ã∫î Ã∫î Ã∫î Ã∫íî ÃØ
î ÃØñî Ã∞
î Ã∞î Ãªî Ãªî Ãªî Ãªêêêêìî, Ã±î6 Ã±î= Ã±ñî Ã≤î! Ã≤î# Ã≤î' Ã≤î( Ã≤î1 Ã≤'ñî Ã≥î! Ã≥î# Ã≥î' Ã≥î( Ã≥î1 Ã≥'ñî Ã¥î! Ã¥î# Ã¥î' Ã¥î( Ã¥î1 Ã¥'ñî Ãµî" Ãµî$ Ãµî( Ãµî) Ãµî3 Ãµ)îî Ã∂î  Ã∂î" Ã∂î% Ã∂îî Ã∑î" Ã∑î$ Ã∑î( Ã∑ëî Ã∏êêêñî Ã≤î% Ã≤î' Ã≤î+ Ã≤î, Ã≤î5 Ã≤'ñî Ã≥î% Ã≥î' Ã≥î+ Ã≥î, Ã≥î5 Ã≥'ñî Ã¥î% Ã¥î' Ã¥î+ Ã¥î, Ã¥î5 Ã¥'ñî Ãµî& Ãµî( Ãµî, Ãµî- Ãµî7 Ãµ)îî Ã∂î$ Ã∂î& Ã∂î) Ã∂îî Ã∑î& Ã∑î( Ã∑î, Ã∑êêêêêêñî Ã≤î! Ã≤î# Ã≤î' Ã≤î( Ã≤î1 Ã≤'ñî Ã≥î! Ã≥î# Ã≥î' Ã≥î( Ã≥î1 Ã≥'ñî Ã¥î! Ã¥î# Ã¥î' Ã¥î( Ã¥î1 Ã¥'ñî Ãµî" Ãµî$ Ãµî( Ãµî) Ãµî3 Ãµ)îî Ã∂î  Ã∂î" Ã∂î% Ã∂îî Ã∑î" Ã∑î$ Ã∑î( Ã∑êêêêíî ÃØ
î ÃØíî Ã∞
î Ã∞êíî ÃΩ
î ÃΩíî Ãæ
î Ãæêíî ÃΩ
î ÃΩñî Ãæ
î Ãæî Ã“î Ã“î Ã“î Ã“íî ÃΩ
î ÃΩòî Ãæ
î Ãæî Ã”î Ã”î Ã”î( Ã”#î) Ã”$î/ Ã”*íî ÃΩ
î ÃΩöî Ãæ
î Ãæî Ã‘î Ã‘î Ã‘î Ã‘î  Ã‘î" Ã‘î$ Ã‘î& Ã‘!êêîî Ãøî Ãøî# Ãøî) Ãøêóî Ãøî Ãøî Ã¿î Ã¿î Ã¿î Ã¿î  Ã¿ñî Ã¡î Ã¡î Ã¡î" Ã¡"î$ Ã¡$î% Ã¡%íî Ã¬î Ã¬ñî Ãøî Ãøî Ã√î" Ã√î# Ã√î, Ã√(òî Ãøî Ãøî Ãƒî Ãƒî Ãƒî" Ãƒî# Ãƒî( Ãƒ$ñî Ãøî Ãøî Ã≈î Ã≈î  Ã≈î" Ã≈òî Ãøî Ãøî Ã∆î Ã∆î Ã∆î( Ã∆$î) Ã∆%î/ Ã∆+öî Ãøî Ãøî Ã«î Ã«î Ã«î Ã«î! Ã«î# Ã«î$ Ã« î& Ã«"êíî Ãøî Ãøêûî Ã…î Ã…î# Ã…î' Ã…î( Ã…î2 Ã…"î3 Ã…#î4 Ã…$î5 Ã…%î; Ã…+î< Ã…,î= Ã…-î> Ã….îÃD Ã…4êóî Ã…î Ã…î Ã î Ã î Ã î Ã î  Ã ñî ÃÀî ÃÀî ÃÀî' ÃÀ'î) ÃÀ)î* ÃÀ*íî ÃÃî ÃÃ‹ î Ã…î Ã…î ÃÕî" ÃÕî# ÃÕî' ÃÕ#î( ÃÕ$î2 ÃÕ.î3 ÃÕ/î4 ÃÕ0î5 ÃÕ1î> ÃÕ:î? ÃÕ;îÃ@ ÃÕ<îÃA ÃÕ=îÃJ ÃÕÃFòî Ã…î Ã…î ÃŒî ÃŒî ÃŒî" ÃŒî# ÃŒî( ÃŒ$ñî Ã…î Ã…î Ãœî Ãœî  Ãœî" Ãœòî Ã…î Ã…î Ã–î Ã–î Ã–î( Ã–$î) Ã–%î/ Ã–+êíî Ã…î Ã…íî ÃΩ
î ÃΩíî Ãæ
î Ãæêíî Ã÷
î Ã÷íî Ã◊
î Ã◊êíî Ã÷
î Ã÷ñî Ã◊
î Ã◊î Õ0î Õ0î Õ0î Õ0íî Ã÷
î Ã÷ñî Ã◊
î Ã◊î Õ1î Õ1î Õ1î Õ1íî Ã÷
î Ã÷òî Ã◊
î Ã◊î Õ2î" Õ2î# Õ2î( Õ2 î) Õ2!î. Õ2&íî Ã÷
î Ã÷ñî Ã◊
î Ã◊î Õ3î Õ3î  Õ3î" Õ3íî Ã÷
î Ã÷ïî Ã◊
î Ã◊î Õ4î Õ4î Õ4îî Õ5î Õ5î Õ5î Õ5îî Õ6î Õ6î Õ6î" Õ6îî Õ7î Õ7î Õ7î Õ7îî Õ8î Õ8î Õ8î Õ8ëî Õ9íî Ã÷
î Ã÷öî Ã◊
î Ã◊î Õ:î Õ:î Õ:î Õ:î" Õ:î$ Õ:î& Õ:î( Õ: êêîî Ãÿî Ãÿî Ãÿî Ãÿêñî Ãÿî Ãÿî ÃŸî ÃŸî ÃŸî ÃŸòî Ãÿî Ãÿî Ã⁄î Ã⁄î Ã⁄î& Ã⁄$î' Ã⁄%î+ Ã⁄)ñî Ãÿî Ãÿî Ã€î Ã€î Ã€î$ Ã€"öî Ãÿî Ãÿî Ã‹î Ã‹î Ã‹î Ã‹î  Ã‹î" Ã‹ î$ Ã‹"î& Ã‹$êíî Ãÿî Ãÿêíî Ãﬁî Ãﬁêñî Ãﬁî Ãﬁî ÃÎî ÃÎî ÃÎî ÃÎöî Ãﬁî Ãﬁî ÃÏî ÃÏî ÃÏî ÃÏî ÃÏî! ÃÏî# ÃÏ î% ÃÏ"êêîî Ãﬂî Ãﬂî Ãﬂî Ãﬂêñî Ãﬂî Ãﬂî Ã‡î Ã‡î Ã‡î Ã‡ñî Ãﬂî Ãﬂî Ã·î Ã·î Ã·î$ Ã·$òî Ãﬂî Ãﬂî Ã‚î Ã‚î Ã‚î& Ã‚&î' Ã‚'î- Ã‚-êíî Ãﬂî Ãﬂêíî Ã‰î Ã‰êêíî Ã‰î Ã‰êûî ÃÊî ÃÊî ÃÊî ÃÊî ÃÊî* ÃÊ%î+ ÃÊ&î, ÃÊ'î- ÃÊ(î2 ÃÊ-î3 ÃÊ.î4 ÃÊ/î5 ÃÊ0î: ÃÊ5êñî ÃÊî ÃÊî ÃÁî ÃÁî ÃÁî ÃÁòî ÃÊî ÃÊî ÃËî ÃËî ÃËî& ÃË&î' ÃË'î+ ÃË+‹ î ÃÊî ÃÊî ÃÈî ÃÈî ÃÈî ÃÈî  ÃÈ î- ÃÈ-î. ÃÈ.î/ ÃÈ/î0 ÃÈ0î9 ÃÈ9î: ÃÈ:î; ÃÈ;î< ÃÈ<îÃE ÃÈÃEêíî ÃÊî ÃÊíî Ãﬁî Ãﬁêíî ÃÓî ÃÓêñî ÃÓî ÃÓî Õî Õî Õî Õöî ÃÓî ÃÓî Õî Õî Õî Õî Õî! Õî# Õ î% Õ"êêîî ÃÔî ÃÔî ÃÔî ÃÔêñî ÃÔî ÃÔî Ãî Ãî Ãî Ã ñî ÃÔî ÃÔî ÃÒî ÃÒî ÃÒî$ ÃÒ(òî ÃÔî ÃÔî ÃÚî ÃÚî ÃÚ î& ÃÚ*î' ÃÚ+î- ÃÚ1êíî ÃÔî ÃÔêíî ÃÙî ÃÙêêíî ÃÙî ÃÙêíî Ãˆî Ãˆêêêòî Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î) Ã˜*î, Ã˜-î/ Ã˜0êñî Ã˜î Ã˜î Ã¯î Ã¯î Ã¯ î Ã¯"òî Ã˜î Ã˜î Ã˘î Ã˘!î Ã˘"î& Ã˘,î' Ã˘-î+ Ã˘1‹ î Ã˜î Ã˜î Ã˙î Ã˙ î Ã˙!î Ã˙%î  Ã˙&î, Ã˙2î/ Ã˙5î1 Ã˙7î2 Ã˙8î3 Ã˙9î4 Ã˙:î= Ã˙ÃCî> Ã˙ÃDî? Ã˙ÃEîÃ@ Ã˙ÃFîÃI Ã˙ÃOêíî Ã˜î Ã˜êíî Ã¸î Ã¸êöî Ã¸î Ã¸î Õî Õî Õî Õî Õ"î! Õ$î" Õ%î$ Õ'êêíî Ã˝î Ã˝êñî Ã˝î Ã˝î Ã˛î Ã˛î Ã˛î Ã˛!ñî Ã˝î Ã˝î Ãˇî Ãˇî Ãˇ î Ãˇ!ñî Ã˝î Ã˝î Õ î" Õ (î# Õ )î, Õ 2ñî Ã˝î Ã˝î Õî Õ%î  Õ&î! Õ'öî Ã˝î Ã˝î Õî Õî Õ î Õ"î  Õ&î" Õ(î# Õ)î% Õ+êíî Ã˝î Ã˝êíî Õî Õêöî Õî Õî Õî Õî Õî Õ#î Õ$î* Õ0î- Õ3î0 Õ6ñî Õî Õî Õî Õî Õ î Õ!‹ î Õî Õî Õî" Õ(î# Õ)î' Õ-î( Õ.î4 Õ:î7 Õ=î9 Õ?î: ÕÃ@î; ÕÃAî< ÕÃBîÃE ÕÃKîÃF ÕÃLîÃG ÕÃMîÃH ÕÃNîÃQ ÕÃWñî Õî Õî Õî Õ%î  Õ&î! Õ'öî Õî Õî Õ	î Õ	î Õ	 î Õ	"î  Õ	&î" Õ	(î# Õ	)î% Õ	+êíî Õî Õíî Ã¸î Ã¸íî Ãˆî Ãˆíî ÃÓî ÃÓêíî Õî Õêñî Õî Õî Õî Õî Õî Õöî Õî Õî Õî Õî Õî Õî Õî! Õî# Õ î% Õ"êêîî Õî Õî Õî Õêñî Õî Õî Õî Õî Õî Õñî Õî Õî Õî Õî Õî$ Õ$òî Õî Õî Õî Õî Õî& Õ&î' Õ'î- Õ-êíî Õî Õêíî Õî Õêêíî Õî Õêñî Õî Õî Õî Õî Õî( Õ#êñî Õî Õî Õî Õî Õî Õòî Õî Õî Õî Õî Õî& Õ&î' Õ'î+ Õ+ñî Õî Õî Õî Õî Õî$ Õ$êíî Õî Õíî Õî Õêíî Õ!î Õ!êñî Õ!î Õ!î Õ.î Õ.î Õ.î Õ.êêîî Õ"î Õ"î Õ"î Õ"êñî Õ"î Õ"î Õ#î Õ#î Õ#î Õ#ñî Õ"î Õ"î Õ$î Õ$î Õ$î$ Õ$$òî Õ"î Õ"î Õ%î Õ%î Õ%î& Õ%&î' Õ%'î- Õ%-êíî Õ"î Õ"êíî Õ'î Õ'êêíî Õ'î Õ'êñî Õ)î Õ)î Õ)î Õ)î Õ)î( Õ)#êñî Õ)î Õ)î Õ*î Õ*î Õ*î Õ*òî Õ)î Õ)î Õ+î Õ+î Õ+î& Õ+&î' Õ+'î+ Õ++ñî Õ)î Õ)î Õ,î Õ,î Õ,î$ Õ,$êíî Õ)î Õ)íî Õ!î Õ!íî Ã÷
î Ã÷íî Ã◊
î Ã◊êíî Õ>
î Õ>íî Õ?
î Õ?êíî Õ>
î Õ>ñî Õ?
î Õ?î ÕÉî ÕÉî ÕÉî ÕÉíî Õ>
î Õ>ñî Õ?
î Õ?î ÕÑî ÕÑî ÕÑî ÕÑíî Õ>
î Õ>òî Õ?
î Õ?î ÕÖî" ÕÖî# ÕÖî( ÕÖ î) ÕÖ!î. ÕÖ&íî Õ>
î Õ>ñî Õ?
î Õ?î ÕÜî ÕÜî  ÕÜî" ÕÜíî Õ>
î Õ>ïî Õ?
î Õ?î Õáî Õáî Õáîî Õàî Õàî Õàî Õàîî Õâî Õâî Õâî" Õâîî Õäî Õäî Õäî Õäîî Õãî Õãî Õãî Õãëî Õåíî Õ>
î Õ>öî Õ?
î Õ?î Õçî Õçî Õçî Õçî" Õçî$ Õçî& Õçî( Õç êêîî Õ@î Õ@î Õ@î Õ@êñî Õ@î Õ@î ÕAî ÕAî ÕAî ÕAòî Õ@î Õ@î ÕBî ÕBî ÕBî& ÕB$î' ÕB%î+ ÕB)ñî Õ@î Õ@î ÕCî ÕCî ÕCî$ ÕC"öî Õ@î Õ@î ÕDî ÕDî ÕDî ÕDî  ÕDî" ÕD î$ ÕD"î& ÕD$êíî Õ@î Õ@êíî ÕFî ÕFêñî ÕFî ÕFî Õqî Õqî Õqî Õqöî ÕFî ÕFî Õrî Õrî Õrî Õrî Õrî! Õrî# Õr î% Õr"êêíî ÕGî ÕGêñî ÕGî ÕGî ÕRî ÕRî  ÕRî! ÕRòî ÕGî ÕGî ÕSî ÕSî ÕSî- ÕS)î. ÕS*î3 ÕS/êêõî ÕHî ÕHî ÕHî ÕHî ÕHî+ ÕH(î, ÕH)î0 ÕH-î1 ÕH.î? ÕH<îÃ@ ÕH=êñî ÕHî ÕHî ÕIî ÕIî ÕIî ÕIòî ÕHî ÕHî ÕJî ÕJî ÕJî& ÕJ(î' ÕJ)î+ ÕJ-ñî ÕHî ÕHî ÕKî ÕKî ÕKî$ ÕK&öî ÕHî ÕHî ÕLî ÕLî ÕLî ÕLî  ÕL"î" ÕL$î# ÕL%î% ÕL'êíî ÕHî ÕHêîî ÕNî ÕNî ÕNî ÕNêñî ÕNî ÕNî ÕOî ÕOî ÕOî ÕOñî ÕNî ÕNî ÕPî ÕPî ÕPî$ ÕP&êíî ÕNî ÕNíî ÕGî ÕGêíî ÕUî ÕUêñî ÕUî ÕUî Õ`î Õ`î  Õ`î! Õ`òî ÕUî ÕUî Õaî Õaî Õaî- Õa)î. Õa*î4 Õa0êêõî ÕVî ÕVî ÕVî ÕVî ÕVî+ ÕV(î, ÕV)î0 ÕV-î1 ÕV.î? ÕV<îÃ@ ÕV=êñî ÕVî ÕVî ÕWî ÕWî ÕWî ÕWòî ÕVî ÕVî ÕXî ÕXî ÕXî& ÕX(î' ÕX)î+ ÕX-ñî ÕVî ÕVî ÕYî ÕYî ÕYî$ ÕY&öî ÕVî ÕVî ÕZî ÕZî ÕZî ÕZî  ÕZ"î" ÕZ$î# ÕZ%î% ÕZ'êíî ÕVî ÕVêîî Õ\î Õ\î Õ\î Õ\êñî Õ\î Õ\î Õ]î Õ]î Õ]î Õ]ñî Õ\î Õ\î Õ^î Õ^î Õ^î$ Õ^&êíî Õ\î Õ\íî ÕUî ÕUêíî Õcî Õcêñî Õcî Õcî Õnî Õnî  Õnî! Õnòî Õcî Õcî Õoî Õoî Õoî- Õo)î. Õo*î1 Õo-êêôî Õdî Õdî Õdî Õdî Õdî) Õd&î* Õd'î2 Õd/î4 Õd1êñî Õdî Õdî Õeî Õeî Õeî Õeòî Õdî Õdî Õfî Õfî Õfî& Õf(î' Õf)î+ Õf-ñî Õdî Õdî Õgî Õgî Õgî$ Õg&öî Õdî Õdî Õhî Õhî Õhî Õhî  Õh"î" Õh$î# Õh%î% Õh'êíî Õdî Õdêîî Õjî Õjî Õjî Õjêñî Õjî Õjî Õkî Õkî Õkî Õkñî Õjî Õjî Õlî Õlî Õlî$ Õl&êíî Õjî Õjíî Õcî Õcíî ÕFî ÕFêíî Õtî Õtêñî Õtî Õtî ÕÅî ÕÅî ÕÅî ÕÅêêîî Õuî Õuî Õuî Õuêñî Õuî Õuî Õvî Õvî Õvî Õvñî Õuî Õuî Õwî Õwî Õwî$ Õw$òî Õuî Õuî Õxî Õxî Õxî& Õx&î' Õx'î- Õx-êíî Õuî Õuêíî Õzî Õzêêíî Õzî Õzêñî Õ|î Õ|î Õ|î Õ|î Õ|î) Õ|$êñî Õ|î Õ|î Õ}î Õ}î Õ}î Õ}ñî Õ|î Õ|î Õ~î Õ~î Õ~î$ Õ~$òî Õ|î Õ|î Õî Õî Õî& Õ&î' Õ'î- Õ-êíî Õ|î Õ|íî Õtî Õtíî Õ>
î Õ>íî Õ?
î Õ?êíî Õè
î Õèíî Õê
î Õêêíî Õè
î Õèñî Õê
î Õêî ÕŸî ÕŸî ÕŸî ÕŸíî Õè
î Õèñî Õê
î Õêî Õ⁄î Õ⁄î Õ⁄î Õ⁄íî Õè
î Õèòî Õê
î Õêî Õ€î" Õ€î# Õ€î( Õ€ î) Õ€!î. Õ€&íî Õè
î Õèñî Õê
î Õêî Õ‹î Õ‹î  Õ‹î" Õ‹íî Õè
î Õèïî Õê
î Õêî Õ›î Õ›î Õ›îî Õﬁî Õﬁî Õﬁî Õﬁîî Õﬂî Õﬂî Õﬂî" Õﬂîî Õ‡î Õ‡î Õ‡î Õ‡îî Õ·î Õ·î Õ·î Õ·ëî Õ‚íî Õè
î Õèöî Õê
î Õêî Õ„î Õ„î Õ„î Õ„î" Õ„î$ Õ„î& Õ„î( Õ„ êêîî Õëî Õëî Õëî Õëêñî Õëî Õëî Õíî Õíî Õíî Õíòî Õëî Õëî Õìî Õìî Õìî& Õì$î' Õì%î+ Õì)ñî Õëî Õëî Õîî Õîî Õîî$ Õî"öî Õëî Õëî Õïî Õïî Õïî Õïî  Õïî" Õï î$ Õï"î& Õï$êíî Õëî Õëêíî Õóî Õóêñî Õóî Õóî Õ’î Õ’î Õ’î Õ’ñî Õóî Õóî Õ÷î" Õ÷î# Õ÷î, Õ÷&ñî Õóî Õóî Õ◊î Õ◊î  Õ◊î" Õ◊êêíî Õòî Õòêñî Õòî Õòî Õ¥î Õ¥î Õ¥î Õ¥öî Õòî Õòî Õµî Õµî Õµî Õµî Õµî! Õµ î# Õµ"î% Õµ$êêîî Õôî Õôî Õôî Õôêñî Õôî Õôî Õöî Õöî Õöî Õöñî Õôî Õôî Õõî Õõî Õõî$ Õõ&òî Õôî Õôî Õúî Õúî Õúî& Õú(î' Õú)î- Õú/ñî Õôî Õôî Õùî Õùî Õù î Õù!êíî Õôî Õôê‹ î Õüî Õüî Õüî Õüî" Õüî# Õü î4 Õü1î5 Õü2î6 Õü3î7 Õü4î8 Õü5î? Õü<îÃ@ Õü=îÃA Õü>îÃB Õü?îÃD ÕüÃAêñî Õüî Õüî Õ†î Õ†î Õ†î Õ†ñî Õüî Õüî Õ°î Õ°î Õ°î$ Õ°&òî Õüî Õüî Õ¢î Õ¢î Õ¢î& Õ¢(î' Õ¢)î+ Õ¢-ñî Õüî Õüî Õ£î Õ£î Õ£ î Õ£!òî Õüî Õüî Õ§î Õ§î Õ§î$ Õ§&î% Õ§'î+ Õ§-êíî Õüî Õüê‹ î Õ¶î Õ¶î Õ¶î Õ¶î" Õ¶î# Õ¶ î4 Õ¶1î5 Õ¶2î6 Õ¶3î7 Õ¶4î8 Õ¶5î? Õ¶<îÃ@ Õ¶=îÃA Õ¶>îÃB Õ¶?îÃD Õ¶ÃAêñî Õ¶î Õ¶î Õßî Õßî Õßî Õßñî Õ¶î Õ¶î Õ®î Õ®î Õ®î$ Õ®&òî Õ¶î Õ¶î Õ©î Õ©î Õ©î& Õ©(î' Õ©)î+ Õ©-ñî Õ¶î Õ¶î Õ™î Õ™î Õ™ î Õ™!òî Õ¶î Õ¶î Õ´î Õ´î Õ´î$ Õ´&î% Õ´'î+ Õ´-êíî Õ¶î Õ¶ê‹ î Õ≠î Õ≠î Õ≠î Õ≠î" Õ≠î# Õ≠ î4 Õ≠1î5 Õ≠2î6 Õ≠3î7 Õ≠4î8 Õ≠5î? Õ≠<îÃ@ Õ≠=îÃA Õ≠>îÃB Õ≠?îÃD Õ≠ÃAêñî Õ≠î Õ≠î ÕÆî ÕÆî ÕÆî ÕÆñî Õ≠î Õ≠î ÕØî ÕØî ÕØî$ ÕØ&òî Õ≠î Õ≠î Õ∞î Õ∞î Õ∞î& Õ∞(î' Õ∞)î+ Õ∞-ñî Õ≠î Õ≠î Õ±î Õ±î Õ± î Õ±!òî Õ≠î Õ≠î Õ≤î Õ≤î Õ≤î$ Õ≤&î% Õ≤'î+ Õ≤-êíî Õ≠î Õ≠íî Õòî Õòêíî Õ∑î Õ∑êñî Õ∑î Õ∑î Õ”î Õ”î Õ”î Õ”êêîî Õ∏î Õ∏î Õ∏î Õ∏êñî Õ∏î Õ∏î Õπî Õπî Õπî Õπñî Õ∏î Õ∏î Õ∫î Õ∫î Õ∫î$ Õ∫&òî Õ∏î Õ∏î Õªî Õªî Õªî& Õª(î' Õª)î- Õª/ñî Õ∏î Õ∏î Õºî Õºî Õº î Õº!êíî Õ∏î Õ∏ê‹ î Õæî Õæî Õæî Õæî" Õæî# Õæ î0 Õæ-î1 Õæ.î2 Õæ/î3 Õæ0î4 Õæ1î; Õæ8î< Õæ9î= Õæ:î> Õæ;îÃ@ Õæ=êñî Õæî Õæî Õøî Õøî Õøî Õøñî Õæî Õæî Õ¿î Õ¿î Õ¿î$ Õ¿&òî Õæî Õæî Õ¡î Õ¡î Õ¡î& Õ¡(î' Õ¡)î+ Õ¡-ñî Õæî Õæî Õ¬î Õ¬î Õ¬ î Õ¬!òî Õæî Õæî Õ√î Õ√î Õ√î$ Õ√&î% Õ√'î+ Õ√-êíî Õæî Õæê‹ î Õ≈î Õ≈î Õ≈î Õ≈î" Õ≈î# Õ≈ î0 Õ≈-î1 Õ≈.î2 Õ≈/î3 Õ≈0î4 Õ≈1î; Õ≈8î< Õ≈9î= Õ≈:î> Õ≈;îÃ@ Õ≈=êñî Õ≈î Õ≈î Õ∆î Õ∆î Õ∆î Õ∆ñî Õ≈î Õ≈î Õ«î Õ«î Õ«î$ Õ«&òî Õ≈î Õ≈î Õ»î Õ»î Õ»î& Õ»(î' Õ»)î+ Õ»-ñî Õ≈î Õ≈î Õ…î Õ…î Õ… î Õ…!òî Õ≈î Õ≈î Õ î Õ î Õ î$ Õ &î% Õ 'î+ Õ -êíî Õ≈î Õ≈ê‹ î ÕÃî ÕÃî ÕÃî ÕÃî" ÕÃî# ÕÃ î0 ÕÃ-î1 ÕÃ.î2 ÕÃ/î3 ÕÃ0î4 ÕÃ1î; ÕÃ8î< ÕÃ9î= ÕÃ:î> ÕÃ;îÃ@ ÕÃ=êñî ÕÃî ÕÃî ÕÕî ÕÕî ÕÕî ÕÕñî ÕÃî ÕÃî ÕŒî ÕŒî ÕŒî$ ÕŒ&òî ÕÃî ÕÃî Õœî Õœî Õœî& Õœ(î' Õœ)î+ Õœ-ñî ÕÃî ÕÃî Õ–î Õ–î Õ– î Õ–!òî ÕÃî ÕÃî Õ—î Õ—î Õ—î$ Õ—&î% Õ—'î+ Õ—-êíî ÕÃî ÕÃíî Õ∑î Õ∑íî Õóî Õóíî Õè
î Õèíî Õê
î Õêíî ÃÆî ÃÆíî Ã≠î Ã≠íî Ãáî Ãá
ëî ÕÔ‘rFñßversion§fileßsourcesÆsourcesContent•names®mappings¿ë¿ë¿ê‹ùëî    ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî  	 ëî  
 ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî    ëî  ! ëî  " ëî  # ëî  $ ëî  % ëî  & ëî  ' ëî  ( ëî  ) ëî  * ëî  + ëî  , ëî  - ëî  . ëî  / ëî  0 ëî  1 ëî  2 ëî  3 ëî  4 ëî  5 ëî  6 ëî  7 ëî  8 ëî  9 ëî  : ëî  ; ëî  < ëî  = ëî  > ëî  ? ëî  Ã@ ëî  ÃA ëî  ÃB ëî  ÃC ëî  ÃD ëî  ÃE ëî  ÃF ëî  ÃG ëî  ÃH ëî  ÃI ëî  ÃJ ëî  ÃK ëî  ÃL ëî  ÃM ëî  ÃN ëî  ÃO ëî  ÃP ëî  ÃQ ëî  ÃR ëî  ÃS ëî  ÃT ëî  ÃU ëî  ÃV ëî  ÃW ëî  ÃX ëî  ÃY ëî  ÃZ ëî  Ã[ ëî  Ã\ ëî  Ã] ëî  Ã^ ëî  Ã_ ëî  Ã` ëî  Ãa ëî  Ãb ëî  Ãc ëî  Ãd ëî  Ãe ëî  Ãf ëî  Ãg ëî  Ãh ëî  Ãi ëî  Ãj ëî  Ãk ëî  Ãl ëî  Ãm ëî  Ãn ëî  Ão ëî  Ãp ëî  Ãq ëî  Ãr ëî  Ãs ëî  Ãt ëî  Ãu ëî  Ãv ëî  Ãw ëî  Ãx ëî  Ãy ëî  Ãz ëî  Ã{ ëî  Ã| ëî  Ã} ëî  Ã~ ëî  Ã ëî  ÃÄ ëî  ÃÅ ëî  ÃÇ ëî  ÃÉ ëî  ÃÑ ëî  ÃÖ ëî  ÃÜ ëî  Ãá ëî  Ãà ëî  Ãâ ëî  Ãä ëî  Ãã ëî  Ãå ëî  Ãç ëî  Ãé ëî  Ãè ëî  Ãê ëî  Ãë ëî  Ãí ëî  Ãì ëî  Ãî ëî  Ãï ëî  Ãñ ëî  Ãó ëî  Ãò ëî  Ãô ëî  Ãö ëî  Ãõ ëî  Ãú ëî  Ãù ëî  Ãû ëî  Ãü ëî  Ã† ëî  Ã° ëî  Ã¢ ëî  Ã£ ëî  Ã§ ëî  Ã• ëî  Ã¶ ëî  Ãß ëî  Ã® ëî  Ã© ëî  Ã™ ëî  Ã´ ëî  Ã¨ ëî  Ã≠ ëî  ÃÆ ëî  ÃØ ëî  Ã∞ ëî  Ã± ëî  Ã≤ ëî  Ã≥ ëî  Ã¥ ëî  Ãµ ëî  Ã∂ ëî  Ã∑ ëî  Ã∏ ëî  Ãπ ëî  Ã∫ ëî  Ãª ëî  Ãº ëî  ÃΩ ëî  Ãæ ëî  Ãø ëî  Ã¿ ëî  Ã¡ ëî  Ã¬ ëî  Ã√ ëî  Ãƒ ëî  Ã≈ ëî  Ã∆ ëî  Ã« ëî  Ã» ëî  Ã… ëî  Ã  ëî  ÃÀ ëî  ÃÃ ëî  ÃÕ ëî  ÃŒ ëî  Ãœ ëî  Ã– ëî  Ã— ëî  Ã“ ëî  Ã” ëî  Ã‘ ëî  Ã’ ëî  Ã÷ ëî  Ã◊ ëî  Ãÿ ëî  ÃŸ ëî  Ã⁄ ëî  Ã€ ëî  Ã‹ ëî  Ã› ëî  Ãﬁ ëî  Ãﬂ ëî  Ã‡ ëî  Ã· ëî  Ã‚ ëî  Ã„ ëî  Ã‰ ëî  ÃÂ ëî  ÃÊ ëî  ÃÁ ëî  ÃË ëî  ÃÈ ëî  ÃÍ ëî  ÃÎ ëî  ÃÏ ëî  ÃÌ ëî  ÃÓ ëî  ÃÔ ëî  Ã ëî  ÃÒ ëî  ÃÚ ëî  ÃÛ ëî  ÃÙ ëî  Ãı ëî  Ãˆ ëî  Ã˜ ëî  Ã¯ ëî  Ã˘ ëî  Ã˙ ëî  Ã˚ ëî  Ã¸ ëî  Ã˝ ëî  Ã˛ ëî  Ãˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ ëî  ÕÔ ëî  Õ ëî  ÕÒ ëî  ÕÚ ëî  ÕÛ ëî  ÕÙ ëî  Õı ëî  Õˆ ëî  Õ˜ ëî  Õ¯ ëî  Õ˘ ëî  Õ˙ ëî  Õ˚ ëî  Õ¸ ëî  Õ˝ ëî  Õ˛ ëî  Õˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ ëî  ÕÔ ëî  Õ ëî  ÕÒ ëî  ÕÚ ëî  ÕÛ ëî  ÕÙ ëî  Õı ëî  Õˆ ëî  Õ˜ ëî  Õ¯ ëî  Õ˘ ëî  Õ˙ ëî  Õ˚ ëî  Õ¸ ëî  Õ˝ ëî  Õ˛ ëî  Õˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ‘rGíßmissing¶plugin√¶genAbc¬ê‘  ‘rHî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêêî‘rIï§type•start£end™specifiers¶source±ImportDeclarationÃÄÃ¢ë‘rJî§type•start£end•local∂ImportDefaultSpecifierÃáÃç‘rKî§type•start£end§name™IdentifierÃáÃç¶router‘rLï§type•start£end•value£rawßLiteralÃìÃ°¨@ohos.routerÆ'@ohos.router'I±ImportDeclarationÃ§Ã‡ëJ∂ImportDefaultSpecifierÃ´ÃªK™IdentifierÃ´Ãª∞CubeStateManagerLßLiteralÃ¡Ãﬂº../services/CubeStateManageræ'../services/CubeStateManager'I±ImportDeclarationÃ‚Õ$ëJ∂ImportDefaultSpecifierÃÈÃ¸K™IdentifierÃÈÃ¸≥NotificationServiceLßLiteralÕÕ#ø../services/NotificationServiceŸ!'../services/NotificationService'I±ImportDeclarationÕ&Õ\ë‘rMï§type•start£end®imported•localØImportSpecifierÕ/Õ9K™IdentifierÕ/Õ9™Cube3DViewK™IdentifierÕ/Õ9™Cube3DViewLßLiteralÕAÕ[∏../components/Cube3DView∫'../components/Cube3DView'