‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄áÊif (!("finalizeConstruction" in ViewPU.prototype)) {
    Reflect.set(ViewPU.prototype, "finalizeConstruction", () => { });
}
import { transitionManager } from '../utils/PageTransitionManager';
import CubeStateManager from '../services/CubeStateManager';
import NotificationService from '../services/NotificationService';
import { Cube3DView } from '../components/Cube3DView';
class CubeDetail extends ViewPU {
    constructor(parent, params, __localStorage, elmtId = -1, paramsLambda = undefined, extraInfo) {
        super(parent, __localStorage, elmtId, extraInfo);
        if (typeof paramsLambda === "function") {
            this.paramsGenerator_ = paramsLambda;
        }
        this.cubeStateManager = CubeStateManager.getInstance();
        this.notificationService = NotificationService.getInstance();
        this.__cubeConnected = new ObservedPropertySimplePU(false, this, "cubeConnected");
        this.__batteryLevel = new ObservedPropertySimplePU(85, this, "batteryLevel");
        this.__bluetoothStatus = new ObservedPropertySimplePU('Â∑≤ËøûÊé•', this, "bluetoothStatus");
        this.__currentFace = new ObservedPropertySimplePU('ÁôΩËâ≤Èù¢', this, "currentFace");
        this.__currentMode = new ObservedPropertySimplePU('Â≠¶‰π†Ê®°Âºè', this, "currentMode");
        this.__cubeOrientation = new ObservedPropertyObjectPU({ x: 0, y: 0, z: 0, face: 'ÁôΩËâ≤Èù¢' }, this, "cubeOrientation");
        this.__rotationX = new ObservedPropertySimplePU(0, this, "rotationX");
        this.__rotationY = new ObservedPropertySimplePU(0, this, "rotationY");
        this.__rotationZ = new ObservedPropertySimplePU(0, this, "rotationZ");
        this.__autoRotate = new ObservedPropertySimplePU(true, this, "autoRotate");
        this.__totalUsageTime = new ObservedPropertySimplePU(0, this, "totalUsageTime");
        this.__todayUsageTime = new ObservedPropertySimplePU(0, this, "todayUsageTime");
        this.__sessionCount = new ObservedPropertySimplePU(0, this, "sessionCount");
        this.__lastSyncTime = new ObservedPropertySimplePU('', this, "lastSyncTime");
        this.__accelerometerData = new ObservedPropertyObjectPU([0, 0, 0], this, "accelerometerData");
        this.__gyroscopeData = new ObservedPropertyObjectPU([0, 0, 0], this, "gyroscopeData");
        this.setInitiallyProvidedValue(params);
        this.finalizeConstruction();
    }
    setInitiallyProvidedValue(params) {
        if (params.cubeStateManager !== undefined) {
            this.cubeStateManager = params.cubeStateManager;
        }
        if (params.notificationService !== undefined) {
            this.notificationService = params.notificationService;
        }
        if (params.cubeConnected !== undefined) {
            this.cubeConnected = params.cubeConnected;
        }
        if (params.batteryLevel !== undefined) {
            this.batteryLevel = params.batteryLevel;
        }
        if (params.bluetoothStatus !== undefined) {
            this.bluetoothStatus = params.bluetoothStatus;
        }
        if (params.currentFace !== undefined) {
            this.currentFace = params.currentFace;
        }
        if (params.currentMode !== undefined) {
            this.currentMode = params.currentMode;
        }
        if (params.cubeOrientation !== undefined) {
            this.cubeOrientation = params.cubeOrientation;
        }
        if (params.rotationX !== undefined) {
            this.rotationX = params.rotationX;
        }
        if (params.rotationY !== undefined) {
            this.rotationY = params.rotationY;
        }
        if (params.rotationZ !== undefined) {
            this.rotationZ = params.rotationZ;
        }
        if (params.autoRotate !== undefined) {
            this.autoRotate = params.autoRotate;
        }
        if (params.totalUsageTime !== undefined) {
            this.totalUsageTime = params.totalUsageTime;
        }
        if (params.todayUsageTime !== undefined) {
            this.todayUsageTime = params.todayUsageTime;
        }
        if (params.sessionCount !== undefined) {
            this.sessionCount = params.sessionCount;
        }
        if (params.lastSyncTime !== undefined) {
            this.lastSyncTime = params.lastSyncTime;
        }
        if (params.accelerometerData !== undefined) {
            this.accelerometerData = params.accelerometerData;
        }
        if (params.gyroscopeData !== undefined) {
            this.gyroscopeData = params.gyroscopeData;
        }
    }
    updateStateVars(params) {
    }
    purgeVariableDependenciesOnElmtId(rmElmtId) {
        this.__cubeConnected.purgeDependencyOnElmtId(rmElmtId);
        this.__batteryLevel.purgeDependencyOnElmtId(rmElmtId);
        this.__bluetoothStatus.purgeDependencyOnElmtId(rmElmtId);
        this.__currentFace.purgeDependencyOnElmtId(rmElmtId);
        this.__currentMode.purgeDependencyOnElmtId(rmElmtId);
        this.__cubeOrientation.purgeDependencyOnElmtId(rmElmtId);
        this.__rotationX.purgeDependencyOnElmtId(rmElmtId);
        this.__rotationY.purgeDependencyOnElmtId(rmElmtId);
        this.__rotationZ.purgeDependencyOnElmtId(rmElmtId);
        this.__autoRotate.purgeDependencyOnElmtId(rmElmtId);
        this.__totalUsageTime.purgeDependencyOnElmtId(rmElmtId);
        this.__todayUsageTime.purgeDependencyOnElmtId(rmElmtId);
        this.__sessionCount.purgeDependencyOnElmtId(rmElmtId);
        this.__lastSyncTime.purgeDependencyOnElmtId(rmElmtId);
        this.__accelerometerData.purgeDependencyOnElmtId(rmElmtId);
        this.__gyroscopeData.purgeDependencyOnElmtId(rmElmtId);
    }
    aboutToBeDeleted() {
        this.__cubeConnected.aboutToBeDeleted();
        this.__batteryLevel.aboutToBeDeleted();
        this.__bluetoothStatus.aboutToBeDeleted();
        this.__currentFace.aboutToBeDeleted();
        this.__currentMode.aboutToBeDeleted();
        this.__cubeOrientation.aboutToBeDeleted();
        this.__rotationX.aboutToBeDeleted();
        this.__rotationY.aboutToBeDeleted();
        this.__rotationZ.aboutToBeDeleted();
        this.__autoRotate.aboutToBeDeleted();
        this.__totalUsageTime.aboutToBeDeleted();
        this.__todayUsageTime.aboutToBeDeleted();
        this.__sessionCount.aboutToBeDeleted();
        this.__lastSyncTime.aboutToBeDeleted();
        this.__accelerometerData.aboutToBeDeleted();
        this.__gyroscopeData.aboutToBeDeleted();
        SubscriberManager.Get().delete(this.id__());
        this.aboutToBeDeletedInternal();
    }
    get cubeConnected() {
        return this.__cubeConnected.get();
    }
    set cubeConnected(newValue) {
        this.__cubeConnected.set(newValue);
    }
    get batteryLevel() {
        return this.__batteryLevel.get();
    }
    set batteryLevel(newValue) {
        this.__batteryLevel.set(newValue);
    }
    get bluetoothStatus() {
        return this.__bluetoothStatus.get();
    }
    set bluetoothStatus(newValue) {
        this.__bluetoothStatus.set(newValue);
    }
    get currentFace() {
        return this.__currentFace.get();
    }
    set currentFace(newValue) {
        this.__currentFace.set(newValue);
    }
    get currentMode() {
        return this.__currentMode.get();
    }
    set currentMode(newValue) {
        this.__currentMode.set(newValue);
    }
    get cubeOrientation() {
        return this.__cubeOrientation.get();
    }
    set cubeOrientation(newValue) {
        this.__cubeOrientation.set(newValue);
    }
    get rotationX() {
        return this.__rotationX.get();
    }
    set rotationX(newValue) {
        this.__rotationX.set(newValue);
    }
    get rotationY() {
        return this.__rotationY.get();
    }
    set rotationY(newValue) {
        this.__rotationY.set(newValue);
    }
    get rotationZ() {
        return this.__rotationZ.get();
    }
    set rotationZ(newValue) {
        this.__rotationZ.set(newValue);
    }
    get autoRotate() {
        return this.__autoRotate.get();
    }
    set autoRotate(newValue) {
        this.__autoRotate.set(newValue);
    }
    get totalUsageTime() {
        return this.__totalUsageTime.get();
    }
    set totalUsageTime(newValue) {
        this.__totalUsageTime.set(newValue);
    }
    get todayUsageTime() {
        return this.__todayUsageTime.get();
    }
    set todayUsageTime(newValue) {
        this.__todayUsageTime.set(newValue);
    }
    get sessionCount() {
        return this.__sessionCount.get();
    }
    set sessionCount(newValue) {
        this.__sessionCount.set(newValue);
    }
    get lastSyncTime() {
        return this.__lastSyncTime.get();
    }
    set lastSyncTime(newValue) {
        this.__lastSyncTime.set(newValue);
    }
    get accelerometerData() {
        return this.__accelerometerData.get();
    }
    set accelerometerData(newValue) {
        this.__accelerometerData.set(newValue);
    }
    get gyroscopeData() {
        return this.__gyroscopeData.get();
    }
    set gyroscopeData(newValue) {
        this.__gyroscopeData.set(newValue);
    }
    aboutToAppear() {
        this.loadCubeData();
        this.startAutoRotation();
        this.startSensorUpdates();
    }
    onPageShow() {
        // È°µÈù¢ÈáçÊñ∞ÊòæÁ§∫Êó∂ÈáçÁΩÆÂèØËßÅÊÄßÂíåÂä®Áîª
        //this.resetVisibility()
        this.animateIn();
    }
    aboutToDisappear() {
        this.stopAutoRotation();
        this.stopSensorUpdates();
    }
    resetVisibility() {
        // ÈáçÁΩÆÈ°µÈù¢ÂèØËßÅÊÄßÁä∂ÊÄÅ
        // ËøôÈáåÂèØ‰ª•Ê∑ªÂä†ÈáçÁΩÆÂä®ÁîªÁä∂ÊÄÅÊàñÂèØËßÅÊÄßÁõ∏ÂÖ≥ÁöÑÈÄªËæë
    }
    animateIn() {
        // È°µÈù¢ËøõÂÖ•Âä®Áîª
        // ËøôÈáåÂèØ‰ª•Ê∑ªÂä†È°µÈù¢ËøõÂÖ•Êó∂ÁöÑÂä®ÁîªÊïàÊûú
    }
    loadCubeData() {
        // Âä†ËΩΩÈ≠îÊñπÁä∂ÊÄÅÊï∞ÊçÆ
        this.cubeConnected = this.cubeStateManager.isConnected();
        this.batteryLevel = this.cubeStateManager.getBatteryLevel();
        this.currentFace = this.cubeStateManager.getCurrentFace();
        this.currentMode = this.cubeStateManager.getCurrentMode();
        // Âä†ËΩΩÁªüËÆ°Êï∞ÊçÆ
        this.totalUsageTime = this.cubeStateManager.getTotalUsageTime();
        this.todayUsageTime = this.cubeStateManager.getTodayUsageTime();
        this.sessionCount = this.cubeStateManager.getSessionCount();
        this.lastSyncTime = this.getCurrentTimeString();
    }
    startAutoRotation() {
        if (this.autoRotate) {
            setInterval(() => {
                this.rotationY += 1;
                this.rotationX += 0.5;
            }, 50);
        }
    }
    stopAutoRotation() {
        // ÂÅúÊ≠¢Ëá™Âä®ÊóãËΩ¨
    }
    startSensorUpdates() {
        // Ê®°Êãü‰º†ÊÑüÂô®Êï∞ÊçÆÊõ¥Êñ∞
        setInterval(() => {
            this.accelerometerData = [
                Math.random() * 2 - 1,
                Math.random() * 2 - 1,
                Math.random() * 2 - 1
            ];
            this.gyroscopeData = [
                Math.random() * 0.5 - 0.25,
                Math.random() * 0.5 - 0.25,
                Math.random() * 0.5 - 0.25
            ];
        }, 1000);
    }
    stopSensorUpdates() {
        // ÂÅúÊ≠¢‰º†ÊÑüÂô®Êõ¥Êñ∞
    }
    getCurrentTimeString() {
        const now = new Date();
        return now.toLocaleTimeString();
    }
    formatDuration(seconds) {
        const hours = Math.floor(seconds / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        const secs = seconds % 60;
        if (hours > 0) {
            return `${hours}h ${minutes}m ${secs}s`;
        }
        else if (minutes > 0) {
            return `${minutes}m ${secs}s`;
        }
        else {
            return `${secs}s`;
        }
    }
    toggleAutoRotation() {
        this.autoRotate = !this.autoRotate;
        if (this.autoRotate) {
            this.startAutoRotation();
        }
        else {
            this.stopAutoRotation();
        }
    }
    resetRotation() {
        this.rotationX = 0;
        this.rotationY = 0;
        this.rotationZ = 0;
    }
    initialRender() {
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.width('100%');
            Column.height('100%');
            Column.backgroundColor('#F5F5F5');
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
            Column.create();
            // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
            Column.width('100%');
            // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
            Column.backgroundColor('#6366F1');
            // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
            Column.expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.TOP]);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
            Row.height(56);
            Row.padding({ left: 16, right: 16 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Image.create({ "id": 16777247, "type": 20000, params: [], "bundleName": "com.example.cubetime", "moduleName": "entry" });
            Image.width(24);
            Image.height(24);
            Image.fillColor(Color.White);
            Image.onClick(() => {
                transitionManager.navigateTo('').catch((err) => {
                    console.error('Navigation failed:', err);
                });
            });
        }, Image);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('È≠îÊñπËØ¶ÊÉÖ');
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor(Color.White);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('Âà∑Êñ∞');
            Text.fontSize(16);
            Text.fontColor('#6366F1');
            Text.fontWeight(FontWeight.Medium);
            Text.padding({ left: 12, right: 12, top: 6, bottom: 6 });
            Text.backgroundColor(Color.White);
            Text.borderRadius(20);
            Text.onClick(() => {
                this.loadCubeData();
            });
        }, Text);
        Text.pop();
        Row.pop();
        // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Scroll.create();
            Scroll.width('100%');
            Scroll.layoutWeight(1);
            Scroll.backgroundColor('#F5F5F5');
            Scroll.edgeEffect(EdgeEffect.Spring);
        }, Scroll);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.padding(16);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.create();
            // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.width('100%');
            // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.padding(16);
        }, Column);
        {
            this.observeComponentCreation2((elmtId, isInitialRender) => {
                if (isInitialRender) {
                    let componentCall = new Cube3DView(this, {
                        rotationX: this.rotationX,
                        rotationY: this.rotationY,
                        rotationZ: this.rotationZ,
                        autoRotate: this.autoRotate,
                        cubeSize: 120,
                        showLabels: true
                    }, undefined, elmtId, () => { }, { page: "entry/src/main/ets/pages/CubeDetail.ets", line: 196, col: 13 });
                    ViewPU.create(componentCall);
                    let paramsLambda = () => {
                        return {
                            rotationX: this.rotationX,
                            rotationY: this.rotationY,
                            rotationZ: this.rotationZ,
                            autoRotate: this.autoRotate,
                            cubeSize: 120,
                            showLabels: true
                        };
                    };
                    componentCall.paramsGenerator_ = paramsLambda;
                }
                else {
                    this.updateStateVarsOfChildByElmtId(elmtId, {
                        rotationX: this.rotationX,
                        rotationY: this.rotationY,
                        rotationZ: this.rotationZ,
                        autoRotate: this.autoRotate,
                        cubeSize: 120,
                        showLabels: true
                    });
                }
            }, { name: "Cube3DView" });
        }
        // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
            Row.create();
            // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
            Row.width('100%');
            // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
            Row.justifyContent(FlexAlign.Center);
            // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
            Row.padding({ bottom: 16 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Button.createWithLabel('ÈáçÁΩÆÊóãËΩ¨');
            Button.onClick(() => {
                this.resetRotation();
            });
            Button.backgroundColor('#6366F1');
            Button.fontColor(Color.White);
            Button.borderRadius(20);
            Button.fontWeight(FontWeight.Medium);
            Button.margin({ right: 8 });
        }, Button);
        Button.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Button.createWithLabel(this.autoRotate ? 'ÂÅúÊ≠¢ÊóãËΩ¨' : 'ÂºÄÂßãÊóãËΩ¨');
            Button.onClick(() => {
                this.toggleAutoRotation();
            });
            Button.backgroundColor(this.autoRotate ? '#EF4444' : '#10B981');
            Button.fontColor(Color.White);
            Button.borderRadius(20);
            Button.fontWeight(FontWeight.Medium);
        }, Button);
        Button.pop();
        // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.create();
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.width('100%');
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.padding(20);
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.backgroundColor(Color.White);
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.borderRadius(16);
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.shadow({
                radius: 20,
                color: '#00000008',
                offsetX: 0,
                offsetY: 4
            });
            // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.margin({ bottom: 16 });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('È≠îÊñπÁä∂ÊÄÅ');
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#1F2937');
            Text.margin({ bottom: 16 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ËøûÊé•Áä∂ÊÄÅ');
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.cubeConnected ? 'Â∑≤ËøûÊé•' : 'Êú™ËøûÊé•');
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor(this.cubeConnected ? '#10B981' : '#EF4444');
        }, Text);
        Text.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÁîµÊ±†ÁîµÈáè');
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.batteryLevel + '%');
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor(this.batteryLevel > 20 ? '#10B981' : '#EF4444');
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Stack.create();
            Stack.margin({ left: 8 });
        }, Stack);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.width(40);
            Column.height(8);
            Column.backgroundColor('#E5E7EB');
            Column.borderRadius(4);
            Column.margin({ left: 8 });
        }, Column);
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.width(this.batteryLevel * 0.4);
            Column.height(8);
            Column.backgroundColor(this.batteryLevel > 20 ? '#10B981' : '#EF4444');
            Column.borderRadius(4);
            Column.margin({ left: 8 });
        }, Column);
        Column.pop();
        Stack.pop();
        Row.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÂΩìÂâçÈù¢');
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.currentFace);
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#6366F1');
        }, Text);
        Text.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÂΩìÂâçÊ®°Âºè');
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.currentMode);
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#F59E0B');
        }, Text);
        Text.pop();
        Row.pop();
        // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.create();
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.width('100%');
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.padding(20);
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.backgroundColor(Color.White);
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.borderRadius(16);
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.shadow({
                radius: 20,
                color: '#00000008',
                offsetX: 0,
                offsetY: 4
            });
            // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.margin({ bottom: 16 });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‰ΩøÁî®ÁªüËÆ°');
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#1F2937');
            Text.margin({ bottom: 16 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.layoutWeight(1);
            Column.alignItems(HorizontalAlign.Start);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.formatDuration(this.totalUsageTime));
            Text.fontSize(28);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#6366F1');
            Text.margin({ bottom: 4 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÊÄª‰ΩøÁî®Êó∂Èó¥');
            Text.fontSize(14);
            Text.fontColor('#6B7280');
        }, Text);
        Text.pop();
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.layoutWeight(1);
            Column.alignItems(HorizontalAlign.Center);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.formatDuration(this.todayUsageTime));
            Text.fontSize(28);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#10B981');
            Text.margin({ bottom: 4 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‰ªäÊó•‰ΩøÁî®');
            Text.fontSize(14);
            Text.fontColor('#6B7280');
        }, Text);
        Text.pop();
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.layoutWeight(1);
            Column.alignItems(HorizontalAlign.End);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.sessionCount.toString());
            Text.fontSize(28);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#F59E0B');
            Text.margin({ bottom: 4 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‰ºöËØùÊ¨°Êï∞');
            Text.fontSize(14);
            Text.fontColor('#6B7280');
        }, Text);
        Text.pop();
        Column.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÊúÄÂêéÂêåÊ≠•');
            Text.fontSize(14);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Blank.create();
        }, Blank);
        Blank.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(this.lastSyncTime);
            Text.fontSize(14);
            Text.fontColor('#9CA3AF');
            Text.fontWeight(FontWeight.Medium);
        }, Text);
        Text.pop();
        Row.pop();
        // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.create();
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.width('100%');
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.padding(20);
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.backgroundColor(Color.White);
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.borderRadius(16);
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.shadow({
                radius: 20,
                color: '#00000008',
                offsetX: 0,
                offsetY: 4
            });
            // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
            Column.margin({ bottom: 32 });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‰º†ÊÑüÂô®Êï∞ÊçÆ');
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#1F2937');
            Text.margin({ bottom: 16 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.padding(16);
            Column.backgroundColor('#F9FAFB');
            Column.borderRadius(12);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
            Row.margin({ bottom: 12 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('Âä†ÈÄüÂ∫¶ËÆ°');
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
            Text.layoutWeight(1);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`X: ${this.accelerometerData[0].toFixed(2)}`);
            Text.fontSize(14);
            Text.fontColor('#6366F1');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`Y: ${this.accelerometerData[1].toFixed(2)}`);
            Text.fontSize(14);
            Text.fontColor('#10B981');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`Z: ${this.accelerometerData[2].toFixed(2)}`);
            Text.fontSize(14);
            Text.fontColor('#F59E0B');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÈôÄËû∫‰ª™');
            Text.fontSize(16);
            Text.fontColor('#6B7280');
            Text.fontWeight(FontWeight.Medium);
            Text.layoutWeight(1);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`X: ${this.gyroscopeData[0].toFixed(2)}`);
            Text.fontSize(14);
            Text.fontColor('#6366F1');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`Y: ${this.gyroscopeData[1].toFixed(2)}`);
            Text.fontSize(14);
            Text.fontColor('#10B981');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`Z: ${this.gyroscopeData[2].toFixed(2)}`);
            Text.fontSize(14);
            Text.fontColor('#F59E0B');
            Text.fontWeight(FontWeight.Bold);
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        Row.pop();
        Column.pop();
        // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
        Column.pop();
        Column.pop();
        Scroll.pop();
        Column.pop();
    }
    rerender() {
        this.updateDirtyElements();
    }
    static getEntryName() {
        return "CubeDetail";
    }
}
registerNamedRoute(() => new CubeDetail(undefined, {}), "", { bundleName: "com.example.cubetime", moduleName: "entry", pagePath: "pages/CubeDetail", pageFullPath: "entry/src/main/ets/pages/CubeDetail", integratedHsp: "false", moduleType: "followWithHap" });
//# sourceMappingURL=CubeDetail.js.map¬îŸIE:\Deveco_Project\test\entry\src\main\ets\utils\PageTransitionManager.etsŸFE:\Deveco_Project\test\entry\src\main\ets\services\CubeStateManager.tsŸIE:\Deveco_Project\test\entry\src\main\ets\services\NotificationService.tsŸCE:\Deveco_Project\test\entry\src\main\ets\components\Cube3DView.etsŸ>E:\Deveco_Project\test\entry\src\main\ets\pages\CubeDetail.ets‘rBö™moduleName±isLocalDependencyØisNodeEntryFileßpkgPath±belongProjectPathßpkgName™pkgVersion±dependencyPkgInfo∞belongModulePath¨shouldEmitJs•entry√¬ºE:\Deveco_Project\test\entry∂E:\Deveco_Project\test•entry•1.0.0‘  ºE:\Deveco_Project\test\entry√√⁄=‘import { transitionManager } from '../utils/PageTransitionManager';
import CubeStateManager from '../services/CubeStateManager';
import NotificationService from '../services/NotificationService';
import { Cube3DView } from '../components/Cube3DView';

interface CubeOrientation {
  x: number;
  y: number;
  z: number;
  face: string;
}

@Entry
@Component
struct CubeDetail {
  private cubeStateManager: CubeStateManager = CubeStateManager.getInstance();
  private notificationService: NotificationService = NotificationService.getInstance();
  
  // È≠îÊñπÁä∂ÊÄÅ
  @State cubeConnected: boolean = false;
  @State batteryLevel: number = 85;
  @State bluetoothStatus: string = 'Â∑≤ËøûÊé•';
  @State currentFace: string = 'ÁôΩËâ≤Èù¢';
  @State currentMode: string = 'Â≠¶‰π†Ê®°Âºè';
  @State cubeOrientation: CubeOrientation = { x: 0, y: 0, z: 0, face: 'ÁôΩËâ≤Èù¢' };
  
  // 3DÂä®ÁîªÁõ∏ÂÖ≥
  @State rotationX: number = 0;
  @State rotationY: number = 0;
  @State rotationZ: number = 0;
  @State autoRotate: boolean = true;
  
  // ËØ¶ÁªÜ‰ø°ÊÅØ
  @State totalUsageTime: number = 0;
  @State todayUsageTime: number = 0;
  @State sessionCount: number = 0;
  @State lastSyncTime: string = '';
  
  // ‰º†ÊÑüÂô®Êï∞ÊçÆ
  @State accelerometerData: Array<number> = [0, 0, 0];
  @State gyroscopeData: Array<number> = [0, 0, 0];

  aboutToAppear() {
    this.loadCubeData();
    this.startAutoRotation();
    this.startSensorUpdates();
  }

  onPageShow() {
    // È°µÈù¢ÈáçÊñ∞ÊòæÁ§∫Êó∂ÈáçÁΩÆÂèØËßÅÊÄßÂíåÂä®Áîª
    //this.resetVisibility()
    this.animateIn()
  }

  aboutToDisappear() {
    this.stopAutoRotation();
    this.stopSensorUpdates();
  }

  private resetVisibility() {
    // ÈáçÁΩÆÈ°µÈù¢ÂèØËßÅÊÄßÁä∂ÊÄÅ
    // ËøôÈáåÂèØ‰ª•Ê∑ªÂä†ÈáçÁΩÆÂä®ÁîªÁä∂ÊÄÅÊàñÂèØËßÅÊÄßÁõ∏ÂÖ≥ÁöÑÈÄªËæë
  }

  private animateIn() {
    // È°µÈù¢ËøõÂÖ•Âä®Áîª
    // ËøôÈáåÂèØ‰ª•Ê∑ªÂä†È°µÈù¢ËøõÂÖ•Êó∂ÁöÑÂä®ÁîªÊïàÊûú
  }

  private loadCubeData() {
    // Âä†ËΩΩÈ≠îÊñπÁä∂ÊÄÅÊï∞ÊçÆ
    this.cubeConnected = this.cubeStateManager.isConnected();
    this.batteryLevel = this.cubeStateManager.getBatteryLevel();
    this.currentFace = this.cubeStateManager.getCurrentFace();
    this.currentMode = this.cubeStateManager.getCurrentMode();
    
    // Âä†ËΩΩÁªüËÆ°Êï∞ÊçÆ
    this.totalUsageTime = this.cubeStateManager.getTotalUsageTime();
    this.todayUsageTime = this.cubeStateManager.getTodayUsageTime();
    this.sessionCount = this.cubeStateManager.getSessionCount();
    this.lastSyncTime = this.getCurrentTimeString();
  }

  private startAutoRotation() {
    if (this.autoRotate) {
      setInterval(() => {
        this.rotationY += 1;
        this.rotationX += 0.5;
      }, 50);
    }
  }

  private stopAutoRotation() {
    // ÂÅúÊ≠¢Ëá™Âä®ÊóãËΩ¨
  }

  private startSensorUpdates() {
    // Ê®°Êãü‰º†ÊÑüÂô®Êï∞ÊçÆÊõ¥Êñ∞
    setInterval(() => {
      this.accelerometerData = [
        Math.random() * 2 - 1,
        Math.random() * 2 - 1,
        Math.random() * 2 - 1
      ];
      this.gyroscopeData = [
        Math.random() * 0.5 - 0.25,
        Math.random() * 0.5 - 0.25,
        Math.random() * 0.5 - 0.25
      ];
    }, 1000);
  }

  private stopSensorUpdates() {
    // ÂÅúÊ≠¢‰º†ÊÑüÂô®Êõ¥Êñ∞
  }

  private getCurrentTimeString(): string {
    const now = new Date();
    return now.toLocaleTimeString();
  }

  private formatDuration(seconds: number): string {
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    const secs = seconds % 60;
    
    if (hours > 0) {
      return `${hours}h ${minutes}m ${secs}s`;
    } else if (minutes > 0) {
      return `${minutes}m ${secs}s`;
    } else {
      return `${secs}s`;
    }
  }

  private toggleAutoRotation() {
    this.autoRotate = !this.autoRotate;
    if (this.autoRotate) {
      this.startAutoRotation();
    } else {
      this.stopAutoRotation();
    }
  }

  private resetRotation() {
    this.rotationX = 0;
    this.rotationY = 0;
    this.rotationZ = 0;
  }

  build() {
    Column() {
      // Áªü‰∏ÄÁ¥´Ëâ≤ËÉåÊôØÔºåË¶ÜÁõñÊï¥‰∏™È°∂ÈÉ®ÂåÖÊã¨Áä∂ÊÄÅÊ†è
      Column() {
        Row() {
          Image($r('app.media.ic_back'))
              .width(24)
              .height(24)
              .fillColor(Color.White)
              .onClick(() => {
                transitionManager.navigateTo('').catch((err: Error) => {
                  console.error('Navigation failed:', err)
                })
              })
          
          Text('È≠îÊñπËØ¶ÊÉÖ')
            .fontSize(20)
            .fontWeight(FontWeight.Bold)
            .fontColor(Color.White)
            .layoutWeight(1)
            .textAlign(TextAlign.Center)
          
          Text('Âà∑Êñ∞')
            .fontSize(16)
            .fontColor('#6366F1')
            .fontWeight(FontWeight.Medium)
            .padding({ left: 12, right: 12, top: 6, bottom: 6 })
            .backgroundColor(Color.White)
            .borderRadius(20)
            .onClick(() => {
              this.loadCubeData();
            })
        }
        .width('100%')
        .height(56)
        .padding({ left: 16, right: 16 })
      }
      .width('100%')
      .backgroundColor('#6366F1')
      .expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.TOP])

      Scroll() {
        Column() {
          // 3DÈ≠îÊñπÂ±ïÁ§∫Âå∫Âüü - Áé∞‰ª£ÂåñËÆæËÆ°
          Column() {
            Cube3DView({
              rotationX: this.rotationX,
              rotationY: this.rotationY,
              rotationZ: this.rotationZ,
              autoRotate: this.autoRotate,
              cubeSize: 120,
              showLabels: true
            })
          }
          .width('100%')
          .padding(16)

          // ÊéßÂà∂ÊåâÈíÆ - Áé∞‰ª£ÂåñËÆæËÆ°
          Row() {
            Button('ÈáçÁΩÆÊóãËΩ¨')
              .onClick(() => {
                this.resetRotation();
              })
              .backgroundColor('#6366F1')
              .fontColor(Color.White)
              .borderRadius(20)
              .fontWeight(FontWeight.Medium)
              .margin({ right: 8 })

            Button(this.autoRotate ? 'ÂÅúÊ≠¢ÊóãËΩ¨' : 'ÂºÄÂßãÊóãËΩ¨')
              .onClick(() => {
                this.toggleAutoRotation();
              })
              .backgroundColor(this.autoRotate ? '#EF4444' : '#10B981')
              .fontColor(Color.White)
              .borderRadius(20)
              .fontWeight(FontWeight.Medium)
          }
          .width('100%')
          .justifyContent(FlexAlign.Center)
          .padding({ bottom: 16 })

          // È≠îÊñπÁä∂ÊÄÅÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
          Column() {
            Text('È≠îÊñπÁä∂ÊÄÅ')
              .fontSize(20)
              .fontWeight(FontWeight.Bold)
              .fontColor('#1F2937')
              .margin({ bottom: 16 })

            Row() {
              Text('ËøûÊé•Áä∂ÊÄÅ')
                .fontSize(16)
                .fontColor('#6B7280')
                .fontWeight(FontWeight.Medium)
              
              Blank()
              
              Text(this.cubeConnected ? 'Â∑≤ËøûÊé•' : 'Êú™ËøûÊé•')
                .fontSize(16)
                .fontWeight(FontWeight.Bold)
                .fontColor(this.cubeConnected ? '#10B981' : '#EF4444')
            }
            .width('100%')
            .margin({ bottom: 12 })

            Row() {
                  Text('ÁîµÊ±†ÁîµÈáè')
                    .fontSize(16)
                    .fontColor('#6B7280')
                    .fontWeight(FontWeight.Medium)
                  
                  Blank()
                  
                  Row() {
                    Text(this.batteryLevel + '%')
                      .fontSize(16)
                      .fontWeight(FontWeight.Bold)
                      .fontColor(this.batteryLevel > 20 ? '#10B981' : '#EF4444')
                    
                    Stack() {
                      Column()
                        .width(40)
                        .height(8)
                        .backgroundColor('#E5E7EB')
                        .borderRadius(4)
                        .margin({ left: 8 })
                      
                      Column()
                        .width(this.batteryLevel * 0.4)
                        .height(8)
                        .backgroundColor(this.batteryLevel > 20 ? '#10B981' : '#EF4444')
                        .borderRadius(4)
                        .margin({ left: 8 })
                    }
                    .margin({ left: 8 })
              }
            }
            .width('100%')
            .margin({ bottom: 12 })

            Row() {
              Text('ÂΩìÂâçÈù¢')
                .fontSize(16)
                .fontColor('#6B7280')
                .fontWeight(FontWeight.Medium)
              
              Blank()
              
              Text(this.currentFace)
                .fontSize(16)
                .fontWeight(FontWeight.Bold)
                .fontColor('#6366F1')
            }
            .width('100%')
            .margin({ bottom: 12 })

            Row() {
              Text('ÂΩìÂâçÊ®°Âºè')
                .fontSize(16)
                .fontColor('#6B7280')
                .fontWeight(FontWeight.Medium)
              
              Blank()
              
              Text(this.currentMode)
                .fontSize(16)
                .fontWeight(FontWeight.Bold)
                .fontColor('#F59E0B')
            }
            .width('100%')
          }
          .width('100%')
          .padding(20)
          .backgroundColor(Color.White)
          .borderRadius(16)
          .shadow({
            radius: 20,
            color: '#00000008',
            offsetX: 0,
            offsetY: 4
          })
          .margin({ bottom: 16 })



          // ÁªüËÆ°Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
          Column() {
            Text('‰ΩøÁî®ÁªüËÆ°')
              .fontSize(20)
              .fontWeight(FontWeight.Bold)
              .fontColor('#1F2937')
              .margin({ bottom: 16 })

            Row() {
              Column() {
                Text(this.formatDuration(this.totalUsageTime))
                  .fontSize(28)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#6366F1')
                  .margin({ bottom: 4 })
                
                Text('ÊÄª‰ΩøÁî®Êó∂Èó¥')
                  .fontSize(14)
                  .fontColor('#6B7280')
              }
              .layoutWeight(1)
              .alignItems(HorizontalAlign.Start)

              Column() {
                Text(this.formatDuration(this.todayUsageTime))
                  .fontSize(28)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#10B981')
                  .margin({ bottom: 4 })
                
                Text('‰ªäÊó•‰ΩøÁî®')
                  .fontSize(14)
                  .fontColor('#6B7280')
              }
              .layoutWeight(1)
              .alignItems(HorizontalAlign.Center)

              Column() {
                Text(this.sessionCount.toString())
                  .fontSize(28)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#F59E0B')
                  .margin({ bottom: 4 })
                
                Text('‰ºöËØùÊ¨°Êï∞')
                  .fontSize(14)
                  .fontColor('#6B7280')
              }
              .layoutWeight(1)
              .alignItems(HorizontalAlign.End)
            }
            .width('100%')
            .margin({ bottom: 12 })

            Row() {
              Text('ÊúÄÂêéÂêåÊ≠•')
                .fontSize(14)
                .fontColor('#6B7280')
                .fontWeight(FontWeight.Medium)
              
              Blank()
              
              Text(this.lastSyncTime)
                .fontSize(14)
                .fontColor('#9CA3AF')
                .fontWeight(FontWeight.Medium)
            }
            .width('100%')
          }
          .width('100%')
          .padding(20)
          .backgroundColor(Color.White)
          .borderRadius(16)
          .shadow({
            radius: 20,
            color: '#00000008',
            offsetX: 0,
            offsetY: 4
          })
          .margin({ bottom: 16 })

          // ‰º†ÊÑüÂô®Êï∞ÊçÆÂç°Áâá - Áé∞‰ª£ÂåñËÆæËÆ°
          Column() {
            Text('‰º†ÊÑüÂô®Êï∞ÊçÆ')
              .fontSize(20)
              .fontWeight(FontWeight.Bold)
              .fontColor('#1F2937')
              .margin({ bottom: 16 })

            Column() {
              Row() {
                Text('Âä†ÈÄüÂ∫¶ËÆ°')
                  .fontSize(16)
                  .fontColor('#6B7280')
                  .fontWeight(FontWeight.Medium)
                  .layoutWeight(1)
                
                Text(`X: ${this.accelerometerData[0].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#6366F1')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
                
                Text(`Y: ${this.accelerometerData[1].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#10B981')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
                
                Text(`Z: ${this.accelerometerData[2].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#F59E0B')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
              }
              .width('100%')
              .margin({ bottom: 12 })

              Row() {
                Text('ÈôÄËû∫‰ª™')
                  .fontSize(16)
                  .fontColor('#6B7280')
                  .fontWeight(FontWeight.Medium)
                  .layoutWeight(1)
                
                Text(`X: ${this.gyroscopeData[0].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#6366F1')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
                
                Text(`Y: ${this.gyroscopeData[1].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#10B981')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
                
                Text(`Z: ${this.gyroscopeData[2].toFixed(2)}`)
                  .fontSize(14)
                  .fontColor('#F59E0B')
                  .fontWeight(FontWeight.Bold)
                  .layoutWeight(1)
                  .textAlign(TextAlign.Center)
              }
              .width('100%')
            }
            .padding(16)
            .backgroundColor('#F9FAFB')
            .borderRadius(12)
          }
          .width('100%')
          .padding(20)
          .backgroundColor(Color.White)
          .borderRadius(16)
          .shadow({
            radius: 20,
            color: '#00000008',
            offsetX: 0,
            offsetY: 4
          })
          .margin({ bottom: 32 })
        }
        .padding(16)
      }
      .width('100%')
      .layoutWeight(1)
      .backgroundColor('#F5F5F5')
      .edgeEffect(EdgeEffect.Spring)
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F5F5F5')
  }
}¿‘rCîæ../utils/PageTransitionManager∏../components/Cube3DViewº../services/CubeStateManagerø../services/NotificationService‘rDó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA¬ŸIE:\Deveco_Project\test\entry\src\main\ets\utils\PageTransitionManager.etsA√™oh-resolve¬DA¬ŸCE:\Deveco_Project\test\entry\src\main\ets\components\Cube3DView.etsA√™oh-resolve¬DA¬ŸFE:\Deveco_Project\test\entry\src\main\ets\services\CubeStateManager.tsA√™oh-resolve¬DA¬ŸIE:\Deveco_Project\test\entry\src\main\ets\services\NotificationService.tsA√™oh-resolve¬ì‘rEñßversion§file™sourceRootßsources•names®mappings≠CubeDetail.js†ëÆCubeDetail.etsê‹dêêêòî    î  î	  	î  î  î"  "îÃB  ÃBîÃC  ÃCñî   î î î î; ;î< <ñî   î î î   îÃA ÃAîÃB ÃBòî   î î	 	î î î î5 5î6 6íî î ëî  êêêêïî  /î0 ?î1 Ã@î< ÃKî> ÃMïî# 5î6 ÃHî7 ÃIîÃB ÃTîÃD ÃVíî< "îÃA 'íî;  î= "íî> #îÃC (íî: î? $íî: îÃ@ %‹ î> ,îÃ@ .îÃA /îÃC 1îÃD 2îÃF 4îÃG 5îÃI 7îÃJ 8îÃL :îÃM ;îÃO =îÃP >îÃR Ã@îÃV ÃDîÃX ÃFîÃ] ÃKîÃ_ ÃMíî8 î9 íî8 î9 íî8 î9 íî9 î= #íî= !"î> !#íî= ""î> "#íî; # î< #!íî; $ î= $"òîÃ@ ',îÃA '-îÃB '.îÃD '0îÃE '1îÃG '3îÃH '4îÃI '5òî< ((î= ()î> (*îÃ@ (,îÃA (-îÃC (/îÃD (0îÃE (1êêëî 
êêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî !	î !êêíî !	î !êêíî "	î "êêíî "	î "êêíî #	î #êêíî #	î #êêíî $	î $êêíî $	î $êêíî '	î 'êêíî '	î 'êêíî (	î (êêíî (	î (êêíî *î *ñî +î +î +	î +î +î +ñî ,î ,î ,	î ,î  ,î! ,ñî -î -î -	î -î! -î" -íî .î .íî 0î 0íî 1î 1íî 2î  2ñî 3î 3î 3	î 3î 3î 3íî 4î 4íî 6î 6ñî 7î 7î 7	î 7î 7î  7ñî 8î 8î 8	î 8î  8î! 8íî 9î 9íî ;
î ;íî <î <íî =î  =íî >î >íî Ã@
î Ã@íî ÃAî ÃAíî ÃBî ÃBíî ÃCî ÃCíî ÃE
î ÃEíî ÃFî ÃFúî ÃGî ÃGî ÃG	î ÃGî ÃGî! ÃGî" ÃGî2 ÃG.î3 ÃG/î> ÃG:îÃ@ ÃG<îÃA ÃG=úî ÃHî ÃHî ÃH	î ÃHî ÃHî  ÃHî! ÃHî1 ÃH-î2 ÃH.îÃA ÃH=îÃC ÃH?îÃD ÃHÃ@úî ÃIî ÃIî ÃI	î ÃIî ÃIî ÃIî  ÃIî0 ÃI,î1 ÃI-î? ÃI;îÃA ÃI=îÃB ÃI>úî ÃJî ÃJî ÃJ	î ÃJî ÃJî ÃJî  ÃJî0 ÃJ,î1 ÃJ-î? ÃJ;îÃA ÃJ=îÃB ÃJ>íî ÃLî ÃLúî ÃMî ÃMî ÃM	î ÃMî ÃMî" ÃMî# ÃMî3 ÃM/î4 ÃM0îÃE ÃMÃAîÃG ÃMÃCîÃH ÃMÃDúî ÃNî ÃNî ÃN	î ÃNî ÃNî" ÃNî# ÃNî3 ÃN/î4 ÃN0îÃE ÃNÃAîÃG ÃNÃCîÃH ÃNÃDúî ÃOî ÃOî ÃO	î ÃOî ÃOî  ÃOî! ÃOî1 ÃO-î2 ÃO.îÃA ÃO=îÃC ÃO?îÃD ÃOÃ@öî ÃPî ÃPî ÃP	î ÃPî ÃPî  ÃPî! ÃPî5 ÃP1î7 ÃP3î8 ÃP4íî ÃQî ÃQíî ÃS
î ÃSñî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTïî ÃUî ÃUî ÃUî ÃUî ÃUóî ÃVî ÃVî ÃVî ÃVî" ÃVî# ÃVî$ ÃVóî ÃWî ÃWî ÃWî ÃWî" ÃWî% ÃWî& ÃWñî ÃXî ÃXî ÃX	î ÃXî ÃXî ÃXëî	 ÃYíî ÃZî ÃZíî Ã\
î Ã\íî Ã]î Ã]íî Ã^î Ã^íî Ã`
î Ã`íî Ãaî Ãaïî Ãbî Ãbî Ãbî Ãbî Ãbïî Ãcî Ãc
î Ãcî" Ãcî% Ãcôî Ãdî Ãdî Ãdî Ãdî Ãdî  Ãdî! Ãdî$ Ãdî% Ãdôî Ãeî Ãeî Ãeî Ãeî Ãeî  Ãeî! Ãeî$ Ãeî% Ãeôî Ãfî Ãfî Ãfî Ãfî Ãfî  Ãfî! Ãfî$ Ãfî% Ãfíî Ãgî Ãgïî Ãhî Ãh
î Ãhî Ãhî! Ãhôî Ãiî Ãiî Ãiî Ãiî Ãiî  Ãiî# Ãiî& Ãiî* Ãi"ôî Ãjî Ãjî Ãjî Ãjî Ãjî  Ãjî# Ãjî& Ãjî* Ãj"ôî Ãkî Ãkî Ãkî Ãkî Ãkî  Ãkî# Ãkî& Ãkî* Ãk"íî Ãlî Ãlñî Ãmî	 Ãmî Ãmî Ãmî Ãmî Ãmíî Ãnî Ãníî Ãp
î Ãpíî Ãqî Ãqíî Ãrî Ãríî Ãt
î Ãtòî Ãuî Ãu
î Ãuî Ãuî Ãuî Ãuî Ãuî Ãuóî Ãvî Ãvî Ãvî Ãvî% Ãv!î' Ãv#î( Ãv$íî Ãwî Ãwîî Ãy
î Ãyî Ãyî Ãy(ùî Ãzî Ãz
î Ãzî Ãzî Ãzî Ãzî  Ãzî! Ãzî( Ãz$î+ Ãz'î/ Ãz+î0 Ãz,î1 Ãz-‹ î Ã{î Ã{
î Ã{î Ã{î Ã{î Ã{î" Ã{î# Ã{î$ Ã{ î+ Ã{'î. Ã{*î2 Ã{.î3 Ã{/î6 Ã{2î8 Ã{4î9 Ã{5î: Ã{6òî Ã|î Ã|
î Ã|î Ã|î Ã|î Ã|î! Ã|î" Ã|ñî Ã~î Ã~î Ã~î Ã~î Ã~î Ã~öî Ãî Ãî Ãî Ãî  Ãî' Ã!î, Ã&î0 Ã*î3 Ã-î4 Ã.ëî	 ÃÄñî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄî ÃÄòî ÃÅî ÃÅî ÃÅî ÃÅî" ÃÅî& ÃÅ î) ÃÅ#î* ÃÅ$ëî	 ÃÇëî ÃÇñî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉî ÃÉëî	 ÃÑíî ÃÖî ÃÖíî Ãá
î Ãáöî Ãàî Ãàî Ãà	î Ãàî Ãàî Ãàî Ãàî  Ãàî* Ãà&î+ Ãà'ñî Ãâî Ãâî Ãâî Ãâî Ãâî Ãâñî Ãäî Ãä
î Ãäî" Ãäî$ Ãäî% Ãäëî	 Ããëî Ããñî Ãåî Ãå
î Ãåî! Ãåî# Ãåî$ Ãåëî	 Ãçíî Ãéî Ãéíî Ãê
î Ãêóî Ãëî Ãëî Ãë	î Ãëî Ãëî Ãëî Ãëóî Ãíî Ãíî Ãí	î Ãíî Ãíî Ãíî Ãíóî Ãìî Ãìî Ãì	î Ãìî Ãìî Ãìî Ãìíî Ãîî Ãîëî Ãñêíî Ãóî Ãó
ñî Ãóî Ãó
î Õ˛î Õ˛
î Õ˛î Õ˛ñî Ãóî Ãó
î Õˇî Õˇî Õˇî  Õˇñî Ãóî Ãó
î Õ î" Õ î# Õ î, Õ êêíî Ãòî! Ãòíî Ãôî Ãôíî Ãòî! Ãòñî Ãôî Ãôî Ãªî Ãªî Ãªî Ãªíî Ãòî! Ãòñî Ãôî Ãôî Ãºî" Ãºî# Ãºî, Ãº íî Ãòî! Ãò‹ î Ãôî Ãôî ÃΩî! ÃΩî" ÃΩî# ÃΩî/ ÃΩ#î0 ÃΩ$î6 ÃΩ*î7 ÃΩ+î9 ÃΩ-î: ÃΩ.îÃF ÃΩ:îÃG ÃΩ;îÃJ ÃΩ>îÃK ÃΩ?êêíî Ãöî Ãöñî Ãöî Ãöî Ã∑	î Ã∑î Ã∑î Ã∑ñî Ãöî Ãöî Ã∏	î Ã∏î Ã∏î Ã∏ûî Ãöî Ãöî Ãπ	î Ãπî Ãπî Ãπî Ãπî  Ãπî" Ãπî$ Ãπî) Ãπ"î+ Ãπ$î- Ãπ&î/ Ãπ(êêíî Ãõ
î Ãõñî Ãõ
î Ãõî Ãúî Ãúî Ãúî Ãúñî Ãõ
î Ãõî Ãùî Ãùî Ãùî Ãùòî Ãõ
î Ãõî Ãûî Ãûî Ãûî! Ãûî" Ãûî' Ãû$óî Ãõ
î Ãõî Ãüî Ãüî Ãüî Ãüî Ãüûî Ã†î! Ã†!î" Ã†"î, Ã†,î- Ã†-î/ Ã†/î0 Ã†0î1 Ã†1î6 Ã†6î7 Ã†7î8 Ã†8î; Ã†ÃBî= Ã†ÃDî? Ã†ÃFöî Ã°î Ã°î Ã°î! Ã°î" Ã° î6 Ã°4î8 Ã°6î; Ã°9î< Ã°:î= Ã°:îî Ã¢î Ã¢î Ã¢î Ã¢íî Ã£î Ã£êêîî Ã•
î Ã•î Ã•î Ã•ñî Ã•
î Ã•î Ã¶î Ã¶î Ã¶î Ã¶òî Ã•
î Ã•î Ãßî Ãßî Ãßî& Ãß"î' Ãß#î+ Ãß'òî Ã•
î Ã•î Ã®î Ã®î Ã®î  Ã®î! Ã®î& Ã®"ñî Ã•
î Ã•î Ã©î Ã©î Ã©î Ã©òî Ã•
î Ã•î Ã™î Ã™î Ã™î$ Ã™ î% Ã™!î+ Ã™'êíî Ã•
î Ã•êîî Ã¨
î Ã¨î Ã¨î Ã¨ñî Ã¨
î Ã¨î Ã≠î Ã≠î Ã≠î Ã≠ñî Ã¨
î Ã¨î ÃÆî ÃÆî ÃÆî$ ÃÆ òî Ã¨
î Ã¨î ÃØî ÃØî ÃØî& ÃØ"î' ÃØ#î- ÃØ)‹ î Ã¨
î Ã¨î Ã∞î Ã∞î Ã∞î Ã∞î Ã∞î! Ã∞î# Ã∞î% Ã∞!î* Ã∞&î, Ã∞(î. Ã∞*î0 Ã∞,î3 Ã∞/î5 Ã∞1î6 Ã∞2î8 Ã∞4î> Ã∞:îÃ@ Ã∞<îÃA Ã∞=îÃC Ã∞?òî Ã¨
î Ã¨î Ã±î  Ã±î! Ã±î& Ã±"î' Ã±#î, Ã±(ñî Ã¨
î Ã¨î Ã≤î Ã≤î Ã≤î  Ã≤óî Ã¨
î Ã¨î Ã≥î Ã≥î Ã≥î Ã≥î Ã≥ñî Ã¥î Ã¥î Ã¥î! Ã¥î# Ã¥!î$ Ã¥"íî Ãµî Ãµêíî Ã¨
î Ã¨íî Ãöî Ãöíî Ãòî Ãòíî Ãôî Ãôêíî Ãøî Ãøñî Ãøî Ãøî Õ˘î Õ˘î Õ˘î Õ˘ñî Ãøî Ãøî Õ˙î Õ˙î  Õ˙î! Õ˙ñî Ãøî Ãøî Õ˚î" Õ˚î# Õ˚î, Õ˚ òî Ãøî Ãøî Õ¸î Õ¸î Õ¸î( Õ¸î) Õ¸î/ Õ¸#êêíî Ã¿î Ã¿ñî Ã¿î Ã¿î Õ˜	î Õ˜î Õ˜î Õ˜êêíî Ã¡
î Ã¡íî Ã¬
î Ã¬íî Ã¡
î Ã¡ñî Ã¬
î Ã¬î ÃÃî ÃÃî ÃÃî ÃÃíî Ã¡
î Ã¡ñî Ã¬
î Ã¬î ÃÕî ÃÕî ÃÕî ÃÕêêêêìî, Ã√î6 Ã√î= Ã√ñî Ãƒî! Ãƒî# Ãƒî' Ãƒî( Ãƒî1 Ãƒ'ñî Ã≈î! Ã≈î# Ã≈î' Ã≈î( Ã≈î1 Ã≈'ñî Ã∆î! Ã∆î# Ã∆î' Ã∆î( Ã∆î1 Ã∆'ñî Ã«î" Ã«î$ Ã«î( Ã«î) Ã«î3 Ã«)îî Ã»î  Ã»î" Ã»î% Ã»îî Ã…î" Ã…î$ Ã…î( Ã…ëî Ã êêêñî Ãƒî% Ãƒî' Ãƒî+ Ãƒî, Ãƒî5 Ãƒ'ñî Ã≈î% Ã≈î' Ã≈î+ Ã≈î, Ã≈î5 Ã≈'ñî Ã∆î% Ã∆î' Ã∆î+ Ã∆î, Ã∆î5 Ã∆'ñî Ã«î& Ã«î( Ã«î, Ã«î- Ã«î7 Ã«)îî Ã»î$ Ã»î& Ã»î) Ã»îî Ã…î& Ã…î( Ã…î, Ã…êêêêêêñî Ãƒî! Ãƒî# Ãƒî' Ãƒî( Ãƒî1 Ãƒ'ñî Ã≈î! Ã≈î# Ã≈î' Ã≈î( Ã≈î1 Ã≈'ñî Ã∆î! Ã∆î# Ã∆î' Ã∆î( Ã∆î1 Ã∆'ñî Ã«î" Ã«î$ Ã«î( Ã«î) Ã«î3 Ã«)îî Ã»î  Ã»î" Ã»î% Ã»îî Ã…î" Ã…î$ Ã…î( Ã…êêêêíî Ã¡
î Ã¡íî Ã¬
î Ã¬êíî Ãœ
î Ãœíî Ã–
î Ã–íî Ãœ
î Ãœñî Ã–
î Ã–î Ã‰î Ã‰î Ã‰î Ã‰íî Ãœ
î Ãœòî Ã–
î Ã–î ÃÂî ÃÂî ÃÂî( ÃÂ#î) ÃÂ$î/ ÃÂ*íî Ãœ
î Ãœöî Ã–
î Ã–î ÃÊî ÃÊî ÃÊî ÃÊî  ÃÊî" ÃÊî$ ÃÊî& ÃÊ!êêîî Ã—î Ã—î# Ã—î) Ã—óî Ã—î Ã—î Ã“î Ã“î Ã“î Ã“î  Ã“ñî Ã”î Ã”î Ã”î" Ã”"î$ Ã”$î% Ã”%íî Ã‘î Ã‘ñî Ã—î Ã—î Ã’î" Ã’î# Ã’î, Ã’(òî Ã—î Ã—î Ã÷î Ã÷î Ã÷î" Ã÷î# Ã÷î( Ã÷$ñî Ã—î Ã—î Ã◊î Ã◊î  Ã◊î" Ã◊òî Ã—î Ã—î Ãÿî Ãÿî Ãÿî( Ãÿ$î) Ãÿ%î/ Ãÿ+öî Ã—î Ã—î ÃŸî ÃŸî ÃŸî ÃŸî! ÃŸî# ÃŸî$ ÃŸ î& ÃŸ"êíî Ã—î Ã—êûî Ã€î Ã€î# Ã€î' Ã€î( Ã€î2 Ã€"î3 Ã€#î4 Ã€$î5 Ã€%î; Ã€+î< Ã€,î= Ã€-î> Ã€.îÃD Ã€4óî Ã€î Ã€î Ã‹î Ã‹î Ã‹î Ã‹î  Ã‹ñî Ã›î Ã›î Ã›î' Ã›'î) Ã›)î* Ã›*íî Ãﬁî Ãﬁ‹ î Ã€î Ã€î Ãﬂî" Ãﬂî# Ãﬂî' Ãﬂ#î( Ãﬂ$î2 Ãﬂ.î3 Ãﬂ/î4 Ãﬂ0î5 Ãﬂ1î> Ãﬂ:î? Ãﬂ;îÃ@ Ãﬂ<îÃA Ãﬂ=îÃJ ÃﬂÃFòî Ã€î Ã€î Ã‡î Ã‡î Ã‡î" Ã‡î# Ã‡î( Ã‡$ñî Ã€î Ã€î Ã·î Ã·î  Ã·î" Ã·òî Ã€î Ã€î Ã‚î Ã‚î Ã‚î( Ã‚$î) Ã‚%î/ Ã‚+êíî Ã€î Ã€íî Ãœ
î Ãœíî Ã–
î Ã–êíî ÃË
î ÃËíî ÃÈ
î ÃÈíî ÃË
î ÃËñî ÃÈ
î ÃÈî ÕBî ÕBî ÕBî ÕBíî ÃË
î ÃËñî ÃÈ
î ÃÈî ÕCî ÕCî ÕCî ÕCíî ÃË
î ÃËòî ÃÈ
î ÃÈî ÕDî" ÕDî# ÕDî( ÕD î) ÕD!î. ÕD&íî ÃË
î ÃËñî ÃÈ
î ÃÈî ÕEî ÕEî  ÕEî" ÕEíî ÃË
î ÃËïî ÃÈ
î ÃÈî ÕFî ÕFî ÕFîî ÕGî ÕGî ÕGî ÕGîî ÕHî ÕHî ÕHî" ÕHîî ÕIî ÕIî ÕIî ÕIîî ÕJî ÕJî ÕJî ÕJëî ÕKíî ÃË
î ÃËöî ÃÈ
î ÃÈî ÕLî ÕLî ÕLî ÕLî" ÕLî$ ÕLî& ÕLî( ÕL êêîî ÃÍî ÃÍî ÃÍî ÃÍñî ÃÍî ÃÍî ÃÎî ÃÎî ÃÎî ÃÎòî ÃÍî ÃÍî ÃÏî ÃÏî ÃÏî& ÃÏ$î' ÃÏ%î+ ÃÏ)ñî ÃÍî ÃÍî ÃÌî ÃÌî ÃÌî$ ÃÌ"öî ÃÍî ÃÍî ÃÓî ÃÓî ÃÓî ÃÓî  ÃÓî" ÃÓ î$ ÃÓ"î& ÃÓ$êíî ÃÍî ÃÍêíî Ãî Ãñî Ãî Ãî Ã˝î Ã˝î Ã˝î Ã˝öî Ãî Ãî Ã˛î Ã˛î Ã˛î Ã˛î Ã˛î! Ã˛î# Ã˛ î% Ã˛"êêîî ÃÒî ÃÒî ÃÒî ÃÒñî ÃÒî ÃÒî ÃÚî ÃÚî ÃÚî ÃÚñî ÃÒî ÃÒî ÃÛî ÃÛî ÃÛî$ ÃÛ$òî ÃÒî ÃÒî ÃÙî ÃÙî ÃÙî& ÃÙ&î' ÃÙ'î- ÃÙ-êíî ÃÒî ÃÒêíî Ãˆî Ãˆêíî Ãˆî Ãˆêûî Ã¯î Ã¯î Ã¯î Ã¯î Ã¯î* Ã¯%î+ Ã¯&î, Ã¯'î- Ã¯(î2 Ã¯-î3 Ã¯.î4 Ã¯/î5 Ã¯0î: Ã¯5ñî Ã¯î Ã¯î Ã˘î Ã˘î Ã˘î Ã˘òî Ã¯î Ã¯î Ã˙î Ã˙î Ã˙î& Ã˙&î' Ã˙'î+ Ã˙+‹ î Ã¯î Ã¯î Ã˚î Ã˚î Ã˚î Ã˚î  Ã˚ î- Ã˚-î. Ã˚.î/ Ã˚/î0 Ã˚0î9 Ã˚9î: Ã˚:î; Ã˚;î< Ã˚<îÃE Ã˚ÃEêíî Ã¯î Ã¯íî Ãî Ãêíî Õ î Õ ñî Õ î Õ î Õ î Õ î Õ î Õ öî Õ î Õ î Õ!î Õ!î Õ!î Õ!î Õ!î! Õ!î# Õ! î% Õ!"êêîî Õî Õî Õî Õñî Õî Õî Õî Õî Õî Õ ñî Õî Õî Õî Õî Õî$ Õ(òî Õî Õî Õî Õî Õ î& Õ*î' Õ+î- Õ1êíî Õî Õêíî Õî Õêíî Õî Õêíî Õî Õêêòî Õ	î Õ	î Õ	î Õ	î Õ	î) Õ	*î, Õ	-î/ Õ	0ñî Õ	î Õ	î Õ
î Õ
î Õ
 î Õ
"òî Õ	î Õ	î Õî Õ!î Õ"î& Õ,î' Õ-î+ Õ1‹ î Õ	î Õ	î Õî Õ î Õ!î Õ%î  Õ&î, Õ2î/ Õ5î1 Õ7î2 Õ8î3 Õ9î4 Õ:î= ÕÃCî> ÕÃDî? ÕÃEîÃ@ ÕÃFîÃI ÕÃOêíî Õ	î Õ	êíî Õî Õöî Õî Õî Õî Õî Õî Õî Õ"î! Õ$î" Õ%î$ Õ'êêíî Õî Õñî Õî Õî Õî Õî Õî Õ!ñî Õî Õî Õî Õî Õ î Õ!ñî Õî Õî Õî" Õ(î# Õ)î, Õ2ñî Õî Õî Õî Õ%î  Õ&î! Õ'öî Õî Õî Õî Õî Õ î Õ"î  Õ&î" Õ(î# Õ)î% Õ+êíî Õî Õêíî Õî Õöî Õî Õî Õî Õî Õî Õ#î Õ$î* Õ0î- Õ3î0 Õ6ñî Õî Õî Õî Õî Õ î Õ!‹ î Õî Õî Õî" Õ(î# Õ)î' Õ-î( Õ.î4 Õ:î7 Õ=î9 Õ?î: ÕÃ@î; ÕÃAî< ÕÃBîÃE ÕÃKîÃF ÕÃLîÃG ÕÃMîÃH ÕÃNîÃQ ÕÃWñî Õî Õî Õî Õ%î  Õ&î! Õ'öî Õî Õî Õî Õî Õ î Õ"î  Õ&î" Õ(î# Õ)î% Õ+êíî Õî Õíî Õî Õíî Õî Õíî Õ î Õ êíî Õ#î Õ#ñî Õ#î Õ#î Õ0î Õ0î Õ0î Õ0öî Õ#î Õ#î Õ1î Õ1î Õ1î Õ1î Õ1î! Õ1î# Õ1 î% Õ1"êêîî Õ$î Õ$î Õ$î Õ$ñî Õ$î Õ$î Õ%î Õ%î Õ%î Õ%ñî Õ$î Õ$î Õ&î Õ&î Õ&î$ Õ&$òî Õ$î Õ$î Õ'î Õ'î Õ'î& Õ'&î' Õ''î- Õ'-êíî Õ$î Õ$êíî Õ)î Õ)êíî Õ)î Õ)êñî Õ+î Õ+î Õ+î Õ+î Õ+î( Õ+#ñî Õ+î Õ+î Õ,î Õ,î Õ,î Õ,òî Õ+î Õ+î Õ-î Õ-î Õ-î& Õ-&î' Õ-'î+ Õ-+ñî Õ+î Õ+î Õ.î Õ.î Õ.î$ Õ.$êíî Õ+î Õ+íî Õ#î Õ#êíî Õ3î Õ3ñî Õ3î Õ3î Õ@î Õ@î Õ@î Õ@êêîî Õ4î Õ4î Õ4î Õ4ñî Õ4î Õ4î Õ5î Õ5î Õ5î Õ5ñî Õ4î Õ4î Õ6î Õ6î Õ6î$ Õ6$òî Õ4î Õ4î Õ7î Õ7î Õ7î& Õ7&î' Õ7'î- Õ7-êíî Õ4î Õ4êíî Õ9î Õ9êíî Õ9î Õ9êñî Õ;î Õ;î Õ;î Õ;î Õ;î( Õ;#ñî Õ;î Õ;î Õ<î Õ<î Õ<î Õ<òî Õ;î Õ;î Õ=î Õ=î Õ=î& Õ=&î' Õ='î+ Õ=+ñî Õ;î Õ;î Õ>î Õ>î Õ>î$ Õ>$êíî Õ;î Õ;íî Õ3î Õ3íî ÃË
î ÃËíî ÃÈ
î ÃÈêíî ÕP
î ÕPíî ÕQ
î ÕQíî ÕP
î ÕPñî ÕQ
î ÕQî Õïî Õïî Õïî Õïíî ÕP
î ÕPñî ÕQ
î ÕQî Õñî Õñî Õñî Õñíî ÕP
î ÕPòî ÕQ
î ÕQî Õóî" Õóî# Õóî( Õó î) Õó!î. Õó&íî ÕP
î ÕPñî ÕQ
î ÕQî Õòî Õòî  Õòî" Õòíî ÕP
î ÕPïî ÕQ
î ÕQî Õôî Õôî Õôîî Õöî Õöî Õöî Õöîî Õõî Õõî Õõî" Õõîî Õúî Õúî Õúî Õúîî Õùî Õùî Õùî Õùëî Õûíî ÕP
î ÕPöî ÕQ
î ÕQî Õüî Õüî Õüî Õüî" Õüî$ Õüî& Õüî( Õü êêîî ÕRî ÕRî ÕRî ÕRñî ÕRî ÕRî ÕSî ÕSî ÕSî ÕSòî ÕRî ÕRî ÕTî ÕTî ÕTî& ÕT$î' ÕT%î+ ÕT)ñî ÕRî ÕRî ÕUî ÕUî ÕUî$ ÕU"öî ÕRî ÕRî ÕVî ÕVî ÕVî ÕVî  ÕVî" ÕV î$ ÕV"î& ÕV$êíî ÕRî ÕRêíî ÕXî ÕXñî ÕXî ÕXî ÕÉî ÕÉî ÕÉî ÕÉöî ÕXî ÕXî ÕÑî ÕÑî ÕÑî ÕÑî ÕÑî! ÕÑî# ÕÑ î% ÕÑ"êêíî ÕYî ÕYñî ÕYî ÕYî Õdî Õdî  Õdî! Õdòî ÕYî ÕYî Õeî Õeî Õeî- Õe)î. Õe*î3 Õe/êêõî ÕZî ÕZî ÕZî ÕZî ÕZî+ ÕZ(î, ÕZ)î0 ÕZ-î1 ÕZ.î? ÕZ<îÃ@ ÕZ=ñî ÕZî ÕZî Õ[î Õ[î Õ[î Õ[òî ÕZî ÕZî Õ\î Õ\î Õ\î& Õ\(î' Õ\)î+ Õ\-ñî ÕZî ÕZî Õ]î Õ]î Õ]î$ Õ]&öî ÕZî ÕZî Õ^î Õ^î Õ^î Õ^î  Õ^"î" Õ^$î# Õ^%î% Õ^'êíî ÕZî ÕZêîî Õ`î Õ`î Õ`î Õ`ñî Õ`î Õ`î Õaî Õaî Õaî Õañî Õ`î Õ`î Õbî Õbî Õbî$ Õb&êíî Õ`î Õ`íî ÕYî ÕYêíî Õgî Õgñî Õgî Õgî Õrî Õrî  Õrî! Õròî Õgî Õgî Õsî Õsî Õsî- Õs)î. Õs*î4 Õs0êêõî Õhî Õhî Õhî Õhî Õhî+ Õh(î, Õh)î0 Õh-î1 Õh.î? Õh<îÃ@ Õh=ñî Õhî Õhî Õiî Õiî Õiî Õiòî Õhî Õhî Õjî Õjî Õjî& Õj(î' Õj)î+ Õj-ñî Õhî Õhî Õkî Õkî Õkî$ Õk&öî Õhî Õhî Õlî Õlî Õlî Õlî  Õl"î" Õl$î# Õl%î% Õl'êíî Õhî Õhêîî Õnî Õnî Õnî Õnñî Õnî Õnî Õoî Õoî Õoî Õoñî Õnî Õnî Õpî Õpî Õpî$ Õp&êíî Õnî Õníî Õgî Õgêíî Õuî Õuñî Õuî Õuî ÕÄî ÕÄî  ÕÄî! ÕÄòî Õuî Õuî ÕÅî ÕÅî ÕÅî- ÕÅ)î. ÕÅ*î1 ÕÅ-êêôî Õvî Õvî Õvî Õvî Õvî) Õv&î* Õv'î2 Õv/î4 Õv1ñî Õvî Õvî Õwî Õwî Õwî Õwòî Õvî Õvî Õxî Õxî Õxî& Õx(î' Õx)î+ Õx-ñî Õvî Õvî Õyî Õyî Õyî$ Õy&öî Õvî Õvî Õzî Õzî Õzî Õzî  Õz"î" Õz$î# Õz%î% Õz'êíî Õvî Õvêîî Õ|î Õ|î Õ|î Õ|ñî Õ|î Õ|î Õ}î Õ}î Õ}î Õ}ñî Õ|î Õ|î Õ~î Õ~î Õ~î$ Õ~&êíî Õ|î Õ|íî Õuî Õuíî ÕXî ÕXêíî ÕÜî ÕÜñî ÕÜî ÕÜî Õìî Õìî Õìî Õìêêîî Õáî Õáî Õáî Õáñî Õáî Õáî Õàî Õàî Õàî Õàñî Õáî Õáî Õâî Õâî Õâî$ Õâ$òî Õáî Õáî Õäî Õäî Õäî& Õä&î' Õä'î- Õä-êíî Õáî Õáêíî Õåî Õåêíî Õåî Õåêñî Õéî Õéî Õéî Õéî Õéî) Õé$ñî Õéî Õéî Õèî Õèî Õèî Õèñî Õéî Õéî Õêî Õêî Õêî$ Õê$òî Õéî Õéî Õëî Õëî Õëî& Õë&î' Õë'î- Õë-êíî Õéî Õéíî ÕÜî ÕÜíî ÕP
î ÕPíî ÕQ
î ÕQêíî Õ°
î Õ°íî Õ¢
î Õ¢íî Õ°
î Õ°ñî Õ¢
î Õ¢î ÕÎî ÕÎî ÕÎî ÕÎíî Õ°
î Õ°ñî Õ¢
î Õ¢î ÕÏî ÕÏî ÕÏî ÕÏíî Õ°
î Õ°òî Õ¢
î Õ¢î ÕÌî" ÕÌî# ÕÌî( ÕÌ î) ÕÌ!î. ÕÌ&íî Õ°
î Õ°ñî Õ¢
î Õ¢î ÕÓî ÕÓî  ÕÓî" ÕÓíî Õ°
î Õ°ïî Õ¢
î Õ¢î ÕÔî ÕÔî ÕÔîî Õî Õî Õî Õîî ÕÒî ÕÒî ÕÒî" ÕÒîî ÕÚî ÕÚî ÕÚî ÕÚîî ÕÛî ÕÛî ÕÛî ÕÛëî ÕÙíî Õ°
î Õ°öî Õ¢
î Õ¢î Õıî Õıî Õıî Õıî" Õıî$ Õıî& Õıî( Õı êêîî Õ£î Õ£î Õ£î Õ£ñî Õ£î Õ£î Õ§î Õ§î Õ§î Õ§òî Õ£î Õ£î Õ•î Õ•î Õ•î& Õ•$î' Õ•%î+ Õ•)ñî Õ£î Õ£î Õ¶î Õ¶î Õ¶î$ Õ¶"öî Õ£î Õ£î Õßî Õßî Õßî Õßî  Õßî" Õß î$ Õß"î& Õß$êíî Õ£î Õ£êíî Õ©î Õ©ñî Õ©î Õ©î ÕÁî ÕÁî ÕÁî ÕÁñî Õ©î Õ©î ÕËî" ÕËî# ÕËî, ÕË&ñî Õ©î Õ©î ÕÈî ÕÈî  ÕÈî" ÕÈêêíî Õ™î Õ™ñî Õ™î Õ™î Õ∆î Õ∆î Õ∆î Õ∆öî Õ™î Õ™î Õ«î Õ«î Õ«î Õ«î Õ«î! Õ« î# Õ«"î% Õ«$êêîî Õ´î Õ´î Õ´î Õ´ñî Õ´î Õ´î Õ¨î Õ¨î Õ¨î Õ¨ñî Õ´î Õ´î Õ≠î Õ≠î Õ≠î$ Õ≠&òî Õ´î Õ´î ÕÆî ÕÆî ÕÆî& ÕÆ(î' ÕÆ)î- ÕÆ/ñî Õ´î Õ´î ÕØî ÕØî ÕØ î ÕØ!êíî Õ´î Õ´ê‹ î Õ±î Õ±î Õ±î Õ±î" Õ±î# Õ± î4 Õ±1î5 Õ±2î6 Õ±3î7 Õ±4î8 Õ±5î? Õ±<îÃ@ Õ±=îÃA Õ±>îÃB Õ±?îÃD Õ±ÃAñî Õ±î Õ±î Õ≤î Õ≤î Õ≤î Õ≤ñî Õ±î Õ±î Õ≥î Õ≥î Õ≥î$ Õ≥&òî Õ±î Õ±î Õ¥î Õ¥î Õ¥î& Õ¥(î' Õ¥)î+ Õ¥-ñî Õ±î Õ±î Õµî Õµî Õµ î Õµ!òî Õ±î Õ±î Õ∂î Õ∂î Õ∂î$ Õ∂&î% Õ∂'î+ Õ∂-êíî Õ±î Õ±ê‹ î Õ∏î Õ∏î Õ∏î Õ∏î" Õ∏î# Õ∏ î4 Õ∏1î5 Õ∏2î6 Õ∏3î7 Õ∏4î8 Õ∏5î? Õ∏<îÃ@ Õ∏=îÃA Õ∏>îÃB Õ∏?îÃD Õ∏ÃAñî Õ∏î Õ∏î Õπî Õπî Õπî Õπñî Õ∏î Õ∏î Õ∫î Õ∫î Õ∫î$ Õ∫&òî Õ∏î Õ∏î Õªî Õªî Õªî& Õª(î' Õª)î+ Õª-ñî Õ∏î Õ∏î Õºî Õºî Õº î Õº!òî Õ∏î Õ∏î ÕΩî ÕΩî ÕΩî$ ÕΩ&î% ÕΩ'î+ ÕΩ-êíî Õ∏î Õ∏ê‹ î Õøî Õøî Õøî Õøî" Õøî# Õø î4 Õø1î5 Õø2î6 Õø3î7 Õø4î8 Õø5î? Õø<îÃ@ Õø=îÃA Õø>îÃB Õø?îÃD ÕøÃAñî Õøî Õøî Õ¿î Õ¿î Õ¿î Õ¿ñî Õøî Õøî Õ¡î Õ¡î Õ¡î$ Õ¡&òî Õøî Õøî Õ¬î Õ¬î Õ¬î& Õ¬(î' Õ¬)î+ Õ¬-ñî Õøî Õøî Õ√î Õ√î Õ√ î Õ√!òî Õøî Õøî Õƒî Õƒî Õƒî$ Õƒ&î% Õƒ'î+ Õƒ-êíî Õøî Õøíî Õ™î Õ™êíî Õ…î Õ…ñî Õ…î Õ…î ÕÂî ÕÂî ÕÂî ÕÂêêîî Õ î Õ î Õ î Õ ñî Õ î Õ î ÕÀî ÕÀî ÕÀî ÕÀñî Õ î Õ î ÕÃî ÕÃî ÕÃî$ ÕÃ&òî Õ î Õ î ÕÕî ÕÕî ÕÕî& ÕÕ(î' ÕÕ)î- ÕÕ/ñî Õ î Õ î ÕŒî ÕŒî ÕŒ î ÕŒ!êíî Õ î Õ ê‹ î Õ–î Õ–î Õ–î Õ–î" Õ–î# Õ– î0 Õ–-î1 Õ–.î2 Õ–/î3 Õ–0î4 Õ–1î; Õ–8î< Õ–9î= Õ–:î> Õ–;îÃ@ Õ–=ñî Õ–î Õ–î Õ—î Õ—î Õ—î Õ—ñî Õ–î Õ–î Õ“î Õ“î Õ“î$ Õ“&òî Õ–î Õ–î Õ”î Õ”î Õ”î& Õ”(î' Õ”)î+ Õ”-ñî Õ–î Õ–î Õ‘î Õ‘î Õ‘ î Õ‘!òî Õ–î Õ–î Õ’î Õ’î Õ’î$ Õ’&î% Õ’'î+ Õ’-êíî Õ–î Õ–ê‹ î Õ◊î Õ◊î Õ◊î Õ◊î" Õ◊î# Õ◊ î0 Õ◊-î1 Õ◊.î2 Õ◊/î3 Õ◊0î4 Õ◊1î; Õ◊8î< Õ◊9î= Õ◊:î> Õ◊;îÃ@ Õ◊=ñî Õ◊î Õ◊î Õÿî Õÿî Õÿî Õÿñî Õ◊î Õ◊î ÕŸî ÕŸî ÕŸî$ ÕŸ&òî Õ◊î Õ◊î Õ⁄î Õ⁄î Õ⁄î& Õ⁄(î' Õ⁄)î+ Õ⁄-ñî Õ◊î Õ◊î Õ€î Õ€î Õ€ î Õ€!òî Õ◊î Õ◊î Õ‹î Õ‹î Õ‹î$ Õ‹&î% Õ‹'î+ Õ‹-êíî Õ◊î Õ◊ê‹ î Õﬁî Õﬁî Õﬁî Õﬁî" Õﬁî# Õﬁ î0 Õﬁ-î1 Õﬁ.î2 Õﬁ/î3 Õﬁ0î4 Õﬁ1î; Õﬁ8î< Õﬁ9î= Õﬁ:î> Õﬁ;îÃ@ Õﬁ=ñî Õﬁî Õﬁî Õﬂî Õﬂî Õﬂî Õﬂñî Õﬁî Õﬁî Õ‡î Õ‡î Õ‡î$ Õ‡&òî Õﬁî Õﬁî Õ·î Õ·î Õ·î& Õ·(î' Õ·)î+ Õ·-ñî Õﬁî Õﬁî Õ‚î Õ‚î Õ‚ î Õ‚!òî Õﬁî Õﬁî Õ„î Õ„î Õ„î$ Õ„&î% Õ„'î+ Õ„-êíî Õﬁî Õﬁíî Õ…î Õ…íî Õ©î Õ©íî Õ°
î Õ°íî Õ¢
î Õ¢íî Ã¿î Ã¿íî Ãøî Ãøíî Ãóî Ãó
ëî Õ‘rFñßversion§fileßsourcesÆsourcesContent•names®mappings¿ë¿ë¿ê‹mëî    ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî  	 ëî  
 ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî    ëî  ! ëî  " ëî  # ëî  $ ëî  % ëî  & ëî  ' ëî  ( ëî  ) ëî  * ëî  + ëî  , ëî  - ëî  . ëî  / ëî  0 ëî  1 ëî  2 ëî  3 ëî  4 ëî  5 ëî  6 ëî  7 ëî  8 ëî  9 ëî  : ëî  ; ëî  < ëî  = ëî  > ëî  ? ëî  Ã@ ëî  ÃA ëî  ÃB ëî  ÃC ëî  ÃD ëî  ÃE ëî  ÃF ëî  ÃG ëî  ÃH ëî  ÃI ëî  ÃJ ëî  ÃK ëî  ÃL ëî  ÃM ëî  ÃN ëî  ÃO ëî  ÃP ëî  ÃQ ëî  ÃR ëî  ÃS ëî  ÃT ëî  ÃU ëî  ÃV ëî  ÃW ëî  ÃX ëî  ÃY ëî  ÃZ ëî  Ã[ ëî  Ã\ ëî  Ã] ëî  Ã^ ëî  Ã_ ëî  Ã` ëî  Ãa ëî  Ãb ëî  Ãc ëî  Ãd ëî  Ãe ëî  Ãf ëî  Ãg ëî  Ãh ëî  Ãi ëî  Ãj ëî  Ãk ëî  Ãl ëî  Ãm ëî  Ãn ëî  Ão ëî  Ãp ëî  Ãq ëî  Ãr ëî  Ãs ëî  Ãt ëî  Ãu ëî  Ãv ëî  Ãw ëî  Ãx ëî  Ãy ëî  Ãz ëî  Ã{ ëî  Ã| ëî  Ã} ëî  Ã~ ëî  Ã ëî  ÃÄ ëî  ÃÅ ëî  ÃÇ ëî  ÃÉ ëî  ÃÑ ëî  ÃÖ ëî  ÃÜ ëî  Ãá ëî  Ãà ëî  Ãâ ëî  Ãä ëî  Ãã ëî  Ãå ëî  Ãç ëî  Ãé ëî  Ãè ëî  Ãê ëî  Ãë ëî  Ãí ëî  Ãì ëî  Ãî ëî  Ãï ëî  Ãñ ëî  Ãó ëî  Ãò ëî  Ãô ëî  Ãö ëî  Ãõ ëî  Ãú ëî  Ãù ëî  Ãû ëî  Ãü ëî  Ã† ëî  Ã° ëî  Ã¢ ëî  Ã£ ëî  Ã§ ëî  Ã• ëî  Ã¶ ëî  Ãß ëî  Ã® ëî  Ã© ëî  Ã™ ëî  Ã´ ëî  Ã¨ ëî  Ã≠ ëî  ÃÆ ëî  ÃØ ëî  Ã∞ ëî  Ã± ëî  Ã≤ ëî  Ã≥ ëî  Ã¥ ëî  Ãµ ëî  Ã∂ ëî  Ã∑ ëî  Ã∏ ëî  Ãπ ëî  Ã∫ ëî  Ãª ëî  Ãº ëî  ÃΩ ëî  Ãæ ëî  Ãø ëî  Ã¿ ëî  Ã¡ ëî  Ã¬ ëî  Ã√ ëî  Ãƒ ëî  Ã≈ ëî  Ã∆ ëî  Ã« ëî  Ã» ëî  Ã… ëî  Ã  ëî  ÃÀ ëî  ÃÃ ëî  ÃÕ ëî  ÃŒ ëî  Ãœ ëî  Ã– ëî  Ã— ëî  Ã“ ëî  Ã” ëî  Ã‘ ëî  Ã’ ëî  Ã÷ ëî  Ã◊ ëî  Ãÿ ëî  ÃŸ ëî  Ã⁄ ëî  Ã€ ëî  Ã‹ ëî  Ã› ëî  Ãﬁ ëî  Ãﬂ ëî  Ã‡ ëî  Ã· ëî  Ã‚ ëî  Ã„ ëî  Ã‰ ëî  ÃÂ ëî  ÃÊ ëî  ÃÁ ëî  ÃË ëî  ÃÈ ëî  ÃÍ ëî  ÃÎ ëî  ÃÏ ëî  ÃÌ ëî  ÃÓ ëî  ÃÔ ëî  Ã ëî  ÃÒ ëî  ÃÚ ëî  ÃÛ ëî  ÃÙ ëî  Ãı ëî  Ãˆ ëî  Ã˜ ëî  Ã¯ ëî  Ã˘ ëî  Ã˙ ëî  Ã˚ ëî  Ã¸ ëî  Ã˝ ëî  Ã˛ ëî  Ãˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ ëî  ÕÔ ëî  Õ ëî  ÕÒ ëî  ÕÚ ëî  ÕÛ ëî  ÕÙ ëî  Õı ëî  Õˆ ëî  Õ˜ ëî  Õ¯ ëî  Õ˘ ëî  Õ˙ ëî  Õ˚ ëî  Õ¸ ëî  Õ˝ ëî  Õ˛ ëî  Õˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ ëî  ÕÔ ëî  Õ ëî  ÕÒ ëî  ÕÚ ëî  ÕÛ ëî  ÕÙ ëî  Õı ëî  Õˆ ëî  Õ˜ ëî  Õ¯ ëî  Õ˘ ëî  Õ˙ ëî  Õ˚ ëî  Õ¸ ëî  Õ˝ ëî  Õ˛ ëî  Õˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ‘rGíßmissing¶plugin√¶genAbc¬ê‘  ‘rHî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêêî‘rIï§type•start£end™specifiers¶source±ImportDeclarationÃÄÃ√ë‘rJï§type•start£end®imported•localØImportSpecifierÃâÃö‘rKî§type•start£end§name™IdentifierÃâÃö±transitionManagerK™IdentifierÃâÃö±transitionManager‘rLï§type•start£end•value£rawßLiteralÃ¢Ã¬æ../utils/PageTransitionManagerŸ '../utils/PageTransitionManager'I±ImportDeclarationÃ≈Õë‘rMî§type•start£end•local∂ImportDefaultSpecifierÃÃÃ‹K™IdentifierÃÃÃ‹∞CubeStateManagerLßLiteralÃ‚Õ º../services/CubeStateManageræ'../services/CubeStateManager'I±ImportDeclarationÕÕEëM∂ImportDefaultSpecifierÕ
ÕK™IdentifierÕ
Õ≥NotificationServiceLßLiteralÕ#ÕDø../services/NotificationServiceŸ!'../services/NotificationService'I±ImportDeclarationÕGÕ}ëJØImportSpecifierÕPÕZK™IdentifierÕPÕZ™Cube3DViewK™IdentifierÕPÕZ™Cube3DViewLßLiteralÕbÕ|∏../components/Cube3DView∫'../components/Cube3DView'